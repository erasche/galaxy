{"version":3,"sources":["mvc/upload/collection/rules-input-view.js"],"names":["Backbone","View","extend","initialize","app","options","ftpFiles","ftpUploadSite","currentFtp","setElement","_template","btnBuild","Button","id","title","onclick","_eventBuild","$el","addClass","btnReset","_eventReset","btnClose","modal","hide","_","each","$","prepend","button","dataTypeOptions","text","dataType","dataTypeView","css","container","data","value","onchange","selectionTypeOptions","push","selectionType","selectionTypeView","_renderSelectedType","selectedDatasetId","$sourceContent","on","_updateBuildState","datasetSelectorView","history","parent","Galaxy","currHistoryPanel","model","historyContentModels","contents","models","historyContentModel","attr","attributes","history_content_type","hid","escape","name","placeholder","_onDataset","val","getRemoteFiles","_setPreview","ftp_files","map","file","join","_updateScreen","get","root","then","response","catch","console","log","error","selection","_buildSelection","content","elements","buildCollection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;sBAMeA,SAASC,IAAT,CAAcC,MAAd,CAAqB;AAChCC,oBAAY,oBAASC,GAAT,EAAc;AAAA;;AACtB,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKC,OAAL,GAAeD,IAAIC,OAAnB;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACA,iBAAKC,aAAL,GAAqBH,IAAII,UAAJ,EAArB;AACA,iBAAKC,UAAL,CAAgB,KAAKC,SAAL,EAAhB;AACA,iBAAKC,QAAL,GAAgB,IAAI,iBAAGC,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,OAAH,CAFmB;AAG1BC,yBAAS,mBAAM;AACX,0BAAKC,WAAL;AACH;AALyB,aAAd,CAAhB;AAOA,iBAAKL,QAAL,CAAcM,GAAd,CAAkBC,QAAlB,CAA2B,aAA3B;AACA,iBAAKC,QAAL,GAAgB,IAAI,iBAAGP,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,OAAH,CAFmB;AAG1BC,yBAAS;AAAA,2BAAM,MAAKK,WAAL,EAAN;AAAA;AAHiB,aAAd,CAAhB;AAKA,iBAAKC,QAAL,GAAgB,IAAI,iBAAGT,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,OAAH,CAFmB;AAG1BC,yBAAS;AAAA,2BAAM,MAAKX,GAAL,CAASkB,KAAT,CAAeC,IAAf,EAAN;AAAA;AAHiB,aAAd,CAAhB;AAKAC,cAAEC,IAAF,CAAO,CAAC,KAAKN,QAAN,EAAgB,KAAKR,QAArB,EAA+B,KAAKU,QAApC,CAAP,EAAsD,kBAAU;AAC5D,sBAAKK,CAAL,CAAO,iBAAP,EAA0BC,OAA1B,CAAkCC,OAAOX,GAAzC;AACH,aAFD;AAGA,gBAAMY,kBAAkB,CAAC,EAAEhB,IAAI,UAAN,EAAkBiB,MAAM,UAAxB,EAAD,EAAuC,EAAEjB,IAAI,aAAN,EAAqBiB,MAAM,eAA3B,EAAvC,CAAxB;AACA,iBAAKC,QAAL,GAAgB,UAAhB;AACA,iBAAKC,YAAL,GAAoB,IAAI,mBAAO/B,IAAX,CAAgB;AAChCgC,qBAAK,yBAD2B;AAEhCC,2BAAW,KAAKR,CAAL,CAAO,iBAAP,CAFqB;AAGhCS,sBAAMN,eAH0B;AAIhCO,uBAAO,KAAKL,QAJoB;AAKhCM,0BAAU,yBAAS;AACf,0BAAKN,QAAL,GAAgBK,KAAhB;AACA;AACH;AAR+B,aAAhB,CAApB;;AAWA,gBAAME,uBAAuB,CACzB,EAAEzB,IAAI,OAAN,EAAeiB,MAAM,cAArB,EADyB,EAEzB,EAAEjB,IAAI,SAAN,EAAiBiB,MAAM,iBAAvB,EAFyB,CAA7B;AAIA,gBAAI,KAAKvB,aAAT,EAAwB;AACpB+B,qCAAqBC,IAArB,CAA0B,EAAE1B,IAAI,KAAN,EAAaiB,MAAM,eAAnB,EAA1B;AACH;AACD,iBAAKU,aAAL,GAAqB,OAArB;AACA,iBAAKC,iBAAL,GAAyB,IAAI,mBAAOxC,IAAX,CAAgB;AACrCgC,qBAAK,yBADgC;AAErCC,2BAAW,KAAKR,CAAL,CAAO,mBAAP,CAF0B;AAGrCS,sBAAMG,oBAH+B;AAIrCF,uBAAO,KAAKI,aAJyB;AAKrCH,0BAAU,yBAAS;AACf,0BAAKG,aAAL,GAAqBJ,KAArB;AACA,0BAAKM,mBAAL;AACH;AARoC,aAAhB,CAAzB;AAUA,iBAAKC,iBAAL,GAAyB,IAAzB;;AAEA,iBAAKC,cAAL,GAAsB,KAAKlB,CAAL,CAAO,6BAAP,CAAtB;AACA,iBAAKkB,cAAL,CAAoBC,EAApB,CAAuB,oBAAvB,EAA6C,YAAM;AAC/C,sBAAKC,iBAAL;AACH,aAFD;AAGA,iBAAKJ,mBAAL;AACH,SAlE+B;;AAoEhCA,6BAAqB,+BAAW;AAAA;;AAC5B,gBAAMF,gBAAgB,KAAKA,aAA3B;AACA,gBAAIA,iBAAiB,SAArB,EAAgC;AAC5B,oBAAI,CAAC,KAAKO,mBAAV,EAA+B;AAC3B,yBAAKJ,iBAAL,GAAyB,IAAzB;AACA,wBAAMK,UAAUC,OAAOC,MAAP,IAAiBD,OAAOC,MAAP,CAAcC,gBAA/B,IAAmDF,OAAOC,MAAP,CAAcC,gBAAd,CAA+BC,KAAlG;AACA,wBAAMC,uBAAuBL,QAAQM,QAAR,CAAiBC,MAA9C;AACA,wBAAMlD,UAAU,EAAhB;AAJ2B;AAAA;AAAA;;AAAA;AAK3B,6CAAgCgD,oBAAhC,8HAAsD;AAAA,gCAA7CG,mBAA6C;;AAClD,gCAAMC,OAAOD,oBAAoBE,UAAjC;AACA,gCAAID,KAAKE,oBAAL,KAA8B,SAAlC,EAA6C;AACzC;AACH;AACDtD,oCAAQkC,IAAR,CAAa,EAAE1B,IAAI4C,KAAK5C,EAAX,EAAeiB,MAAS2B,KAAKG,GAAd,UAAsBpC,EAAEqC,MAAF,CAASJ,KAAKK,IAAd,CAArC,EAAb;AACH;AAX0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY3B,yBAAKf,mBAAL,GAA2B,IAAI,mBAAO9C,IAAX,CAAgB;AACvCiC,mCAAW,KAAKR,CAAL,CAAO,mBAAP,CAD4B;AAEvCS,8BAAM9B,OAFiC;AAGvC0D,qCAAa,4BAAG,kBAAH,CAH0B;AAIvC1B,kCAAU,uBAAO;AACb,mCAAK2B,UAAL,CAAgBC,GAAhB;AACH;AANsC,qBAAhB,CAA3B;AAQH,iBApBD,MAoBO;AACH,yBAAKlB,mBAAL,CAAyBX,KAAzB,CAA+B,IAA/B;AACH;AACJ,aAxBD,MAwBO,IAAII,iBAAiB,KAArB,EAA4B;AAC/B,sCAAY0B,cAAZ,CAA2B,qBAAa;AACpC,2BAAKC,WAAL,CAAiBC,UAAUC,GAAV,CAAc;AAAA,+BAAQC,KAAK,MAAL,CAAR;AAAA,qBAAd,EAAoCC,IAApC,CAAyC,IAAzC,CAAjB;AACA,2BAAKjE,QAAL,GAAgB8D,SAAhB;AACH,iBAHD;AAIH;AACD,iBAAKI,aAAL;AACH,SArG+B;;AAuGhCR,oBAAY,oBAASrB,iBAAT,EAA4B;AAAA;;AACpC,iBAAKA,iBAAL,GAAyBA,iBAAzB;AACA,gBAAI,CAACA,iBAAL,EAAwB;AACpB,qBAAKwB,WAAL,CAAiB,EAAjB;AACA;AACH;AACD,4BACKM,GADL,CAEWvB,OAAOwB,IAFlB,sBAEuCxB,OAAOC,gBAAP,CAAwBC,KAAxB,CAA8BvC,EAFrE,kBAEoF8B,iBAFpF,eAIKgC,IAJL,CAIU,oBAAY;AACd,uBAAKR,WAAL,CAAiBS,SAASzC,IAA1B;AACH,aANL,EAOK0C,KAPL,CAOW;AAAA,uBAASC,QAAQC,GAAR,CAAYC,KAAZ,CAAT;AAAA,aAPX;AAQH,SArH+B;;AAuHhC;AACA5D,qBAAa,uBAAW;AACpB,gBAAI,KAAK2B,mBAAT,EAA8B;AAC1B,qBAAKA,mBAAL,CAAyBX,KAAzB,CAA+B,IAA/B;AACH;AACD,iBAAKQ,cAAL,CAAoBqB,GAApB,CAAwB,EAAxB;AACA,iBAAKO,aAAL;AACH,SA9H+B;;AAgIhCxD,qBAAa,uBAAW;AACpB,gBAAMiE,YAAY,KAAKrC,cAAL,CAAoBqB,GAApB,EAAlB;AACA,iBAAKiB,eAAL,CAAqBD,SAArB;AACH,SAnI+B;;AAqIhCC,yBAAiB,yBAASC,OAAT,EAAkB;AAC/B,gBAAM3C,gBAAgB,KAAKA,aAA3B;AACA,gBAAMyC,YAAY,EAAlB;AACA,gBAAIzC,iBAAiB,SAAjB,IAA8BA,iBAAiB,OAAnD,EAA4D;AACxDyC,0BAAUzC,aAAV,GAA0B,KAA1B;AACAyC,0BAAUE,OAAV,GAAoBA,OAApB;AACH,aAHD,MAGO,IAAI3C,iBAAiB,KAArB,EAA4B;AAC/ByC,0BAAUzC,aAAV,GAA0B,KAA1B;AACAyC,0BAAUG,QAAV,GAAqB,KAAK9E,QAA1B;AACA2E,0BAAU1E,aAAV,GAA0B,KAAKA,aAA/B;AACH;AACD0E,sBAAUlD,QAAV,GAAqB,KAAKA,QAA1B;AACAmB,mBAAOC,gBAAP,CAAwBkC,eAAxB,CAAwC,OAAxC,EAAiDJ,SAAjD,EAA4D,IAA5D;AACA,iBAAK7E,GAAL,CAASkB,KAAT,CAAeC,IAAf;AACH,SAnJ+B;;AAqJhC4C,qBAAa,qBAASgB,OAAT,EAAkB;AAC3B,iBAAKvC,cAAL,CAAoBqB,GAApB,CAAwBkB,OAAxB;AACA,iBAAKX,aAAL;AACH,SAxJ+B;;AA0JhCA,uBAAe,yBAAW;AACtB,iBAAK1B,iBAAL;AACA,gBAAMN,gBAAgB,KAAKA,aAA3B;AACA,iBAAKd,CAAL,CAAO,6BAAP,EAAsCc,iBAAiB,SAAjB,GAA6B,MAA7B,GAAsC,MAA5E;AACA,iBAAKI,cAAL,CAAoBa,IAApB,CAAyB,UAAzB,EAAqCjB,kBAAkB,OAAvD;AACH,SA/J+B;;AAiKhCM,2BAAmB,6BAAW;AAC1B,gBAAMmC,YAAY,KAAKrC,cAAL,CAAoBqB,GAApB,EAAlB;AACA,iBAAKtD,QAAL,CAAcsE,YAAY,QAAZ,GAAuB,SAArC;AACA,iBAAKtE,QAAL,CAAcM,GAAd,CAAkBgE,YAAY,UAAZ,GAAyB,aAA3C,EAA0D,aAA1D;AACH,SArK+B;;AAuKhCvE,mBAAW,qBAAW;AAClB,mmBAU4D,4BAAG,gBAAH,CAV5D,+OAc4D,4BAAG,wBAAH,CAd5D,mRAkB4D,4BAAG,wBAAH,CAlB5D;AAkCH;AA1M+B,KAArB,C","file":"../../../../scripts/mvc/upload/collection/rules-input-view.js","sourcesContent":["import _l from \"utils/localization\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select\";\nimport UploadUtils from \"mvc/upload/upload-utils\";\nimport axios from \"axios\";\n\nexport default Backbone.View.extend({\n    initialize: function(app) {\n        this.app = app;\n        this.options = app.options;\n        this.ftpFiles = [];\n        this.ftpUploadSite = app.currentFtp();\n        this.setElement(this._template());\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: _l(\"Build\"),\n            onclick: () => {\n                this._eventBuild();\n            }\n        });\n        this.btnBuild.$el.addClass(\"btn-primary\");\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: _l(\"Reset\"),\n            onclick: () => this._eventReset()\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: _l(\"Close\"),\n            onclick: () => this.app.modal.hide()\n        });\n        _.each([this.btnReset, this.btnBuild, this.btnClose], button => {\n            this.$(\".upload-buttons\").prepend(button.$el);\n        });\n        const dataTypeOptions = [{ id: \"datasets\", text: \"Datasets\" }, { id: \"collections\", text: \"Collection(s)\" }];\n        this.dataType = \"datasets\";\n        this.dataTypeView = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".rule-data-type\"),\n            data: dataTypeOptions,\n            value: this.dataType,\n            onchange: value => {\n                this.dataType = value;\n                // this._renderSelectedType();\n            }\n        });\n\n        const selectionTypeOptions = [\n            { id: \"paste\", text: \"Pasted Table\" },\n            { id: \"dataset\", text: \"History Dataset\" }\n        ];\n        if (this.ftpUploadSite) {\n            selectionTypeOptions.push({ id: \"ftp\", text: \"FTP Directory\" });\n        }\n        this.selectionType = \"paste\";\n        this.selectionTypeView = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".rule-select-type\"),\n            data: selectionTypeOptions,\n            value: this.selectionType,\n            onchange: value => {\n                this.selectionType = value;\n                this._renderSelectedType();\n            }\n        });\n        this.selectedDatasetId = null;\n\n        this.$sourceContent = this.$(\".upload-rule-source-content\");\n        this.$sourceContent.on(\"change keyup paste\", () => {\n            this._updateBuildState();\n        });\n        this._renderSelectedType();\n    },\n\n    _renderSelectedType: function() {\n        const selectionType = this.selectionType;\n        if (selectionType == \"dataset\") {\n            if (!this.datasetSelectorView) {\n                this.selectedDatasetId = null;\n                const history = parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.model;\n                const historyContentModels = history.contents.models;\n                const options = [];\n                for (let historyContentModel of historyContentModels) {\n                    const attr = historyContentModel.attributes;\n                    if (attr.history_content_type !== \"dataset\") {\n                        continue;\n                    }\n                    options.push({ id: attr.id, text: `${attr.hid}: ${_.escape(attr.name)}` });\n                }\n                this.datasetSelectorView = new Select.View({\n                    container: this.$(\".dataset-selector\"),\n                    data: options,\n                    placeholder: _l(\"Select a dataset\"),\n                    onchange: val => {\n                        this._onDataset(val);\n                    }\n                });\n            } else {\n                this.datasetSelectorView.value(null);\n            }\n        } else if (selectionType == \"ftp\") {\n            UploadUtils.getRemoteFiles(ftp_files => {\n                this._setPreview(ftp_files.map(file => file[\"path\"]).join(\"\\n\"));\n                this.ftpFiles = ftp_files;\n            });\n        }\n        this._updateScreen();\n    },\n\n    _onDataset: function(selectedDatasetId) {\n        this.selectedDatasetId = selectedDatasetId;\n        if (!selectedDatasetId) {\n            this._setPreview(\"\");\n            return;\n        }\n        axios\n            .get(\n                `${Galaxy.root}api/histories/${Galaxy.currHistoryPanel.model.id}/contents/${selectedDatasetId}/display`\n            )\n            .then(response => {\n                this._setPreview(response.data);\n            })\n            .catch(error => console.log(error));\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.datasetSelectorView) {\n            this.datasetSelectorView.value(null);\n        }\n        this.$sourceContent.val(\"\");\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        const selection = this.$sourceContent.val();\n        this._buildSelection(selection);\n    },\n\n    _buildSelection: function(content) {\n        const selectionType = this.selectionType;\n        const selection = {};\n        if (selectionType == \"dataset\" || selectionType == \"paste\") {\n            selection.selectionType = \"raw\";\n            selection.content = content;\n        } else if (selectionType == \"ftp\") {\n            selection.selectionType = \"ftp\";\n            selection.elements = this.ftpFiles;\n            selection.ftpUploadSite = this.ftpUploadSite;\n        }\n        selection.dataType = this.dataType;\n        Galaxy.currHistoryPanel.buildCollection(\"rules\", selection, true);\n        this.app.modal.hide();\n    },\n\n    _setPreview: function(content) {\n        this.$sourceContent.val(content);\n        this._updateScreen();\n    },\n\n    _updateScreen: function() {\n        this._updateBuildState();\n        const selectionType = this.selectionType;\n        this.$(\"#upload-rule-dataset-option\")[selectionType == \"dataset\" ? \"show\" : \"hide\"]();\n        this.$sourceContent.attr(\"disabled\", selectionType !== \"paste\");\n    },\n\n    _updateBuildState: function() {\n        const selection = this.$sourceContent.val();\n        this.btnBuild[selection ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[selection ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n    },\n\n    _template: function() {\n        return `\n            <div class=\"upload-view-default\">\n                <div class=\"upload-top\">\n                    <h6 class=\"upload-top-info\">\n                        Tabular source data to extract collection files and metadata from\n                    </h6>\n                </div>\n                <div class=\"upload-box\" style=\"height: 335px;\">\n                    <span style=\"width: 25%; display: inline; height: 100%\" class=\"float-left\">\n                        <div class=\"upload-rule-option\">\n                            <div class=\"upload-rule-option-title\">${_l(\"Upload data as\")}:</div>\n                            <div class=\"rule-data-type\" />\n                        </div>\n                        <div class=\"upload-rule-option\">\n                            <div class=\"upload-rule-option-title\">${_l(\"Load tabular data from\")}:</div>\n                            <div class=\"rule-select-type\" />\n                        </div>\n                        <div id=\"upload-rule-dataset-option\" class=\"upload-rule-option\">\n                            <div class=\"upload-rule-option-title\">${_l(\"Select dataset to load\")}:</div>\n                            <div class=\"dataset-selector\" />\n                        </div>\n                    </span>\n                    <span style=\"display: inline; float: right; width: 75%; height: 300px\">\n                    <textarea class=\"upload-rule-source-content form-control\" style=\"height: 100%\"></textarea>\n                    </span>\n                </div>\n                <div class=\"clear\" />\n                <!--\n                <div class=\"upload-footer\">\n                </div>\n                -->\n                <div class=\"upload-buttons\"/>\n                </div>\n        `;\n    }\n});\n"]}