{"version":3,"sources":["mvc/upload/default/default-view.js"],"names":["Backbone","_","View","extend","upload_size","collection","Collection","counter","announce","success","error","running","reset","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","setElement","_template","$uploadbox","$","$uploadtable","btnLocal","Button","id","title","onclick","uploadbox","select","icon","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStart","_eventStart","btnStop","_eventStop","btnReset","_eventReset","btnClose","modal","hide","each","prepend","button","$el","url","upload_path","index","file","_eventAnnounce","toData","get","history_id","progress","percentage","_eventProgress","message","_eventSuccess","_eventError","warning","_eventWarning","complete","_eventComplete","ondragover","addClass","ondragleave","removeClass","ftp","container","select_extension","css","data","filter","ext","composite_files","value","default_extension","onchange","extension","_changeExtension","on","e","target","text","list","placement","preventDefault","select_genome","default_genome","genome","_changeGenome","loader","$container","new_content","model","upload_row","find","append","render","_eventRemove","compatible","html","enable_reset","enable_start","enable_sources","show_table","new_model","Model","file_name","name","file_size","size","file_mode","mode","file_path","path","file_data","add","it","set","status","info","_uploadPercentage","upload_completed","Galaxy","currHistoryPanel","refreshContents","remove","visible","empty","onadd","ftp_file","onremove","model_index","show","currentHistory","_uploadFtp","start","user","chunk_upload_size","stop","defaults_only","push","length","uploadpost"],"mappings":";;;;;;;QACYA,Q;;QACAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAeGD,SAASE,IAAT,CAAcC,MAAd,CAAqB;AAChC;AACAC,qBAAa,CAFmB;;AAIhC;AACAC,oBAAY,IAAI,sBAAYC,UAAhB,EALoB;;AAOhC;AACAC,iBAAS;AACLC,sBAAU,CADL;AAELC,qBAAS,CAFJ;AAGLC,mBAAO,CAHF;AAILC,qBAAS,CAJJ;AAKLC,mBAAO,iBAAW;AACd,qBAAKJ,QAAL,GAAgB,KAAKC,OAAL,GAAe,KAAKC,KAAL,GAAa,KAAKC,OAAL,GAAe,CAA3D;AACH;AAPI,SARuB;;AAkBhCE,oBAAY,oBAASC,GAAT,EAAc;AACtB,gBAAIC,OAAO,IAAX;AACA,iBAAKD,GAAL,GAAWA,GAAX;AACA,iBAAKE,OAAL,GAAeF,IAAIE,OAAnB;AACA,iBAAKC,eAAL,GAAuBH,IAAIG,eAA3B;AACA,iBAAKC,YAAL,GAAoBJ,IAAII,YAAxB;AACA,iBAAKC,SAAL,GAAiBL,IAAIK,SAArB;AACA,iBAAKC,eAAL,GAAuBN,IAAIO,UAAJ,EAAvB;;AAEA;AACA,iBAAKC,UAAL,CAAgB,KAAKC,SAAL,EAAhB;AACA,iBAAKC,UAAL,GAAkB,KAAKC,CAAL,CAAO,aAAP,CAAlB;AACA,iBAAKC,YAAL,GAAoB,KAAKD,CAAL,CAAO,eAAP,CAApB;;AAEA;AACA,iBAAKE,QAAL,GAAgB,IAAI,iBAAGC,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,mBAAH,CAFmB;AAG1BC,yBAAS,mBAAW;AAChBhB,yBAAKiB,SAAL,CAAeC,MAAf;AACH,iBALyB;AAM1BC,sBAAM;AANoB,aAAd,CAAhB;AAQA,iBAAKC,MAAL,GAAc,IAAI,iBAAGP,MAAP,CAAc;AACxBC,oBAAI,SADoB;AAExBC,uBAAO,4BAAG,iBAAH,CAFiB;AAGxBC,yBAAS,mBAAW;AAChBhB,yBAAKqB,SAAL;AACH,iBALuB;AAMxBF,sBAAM;AANkB,aAAd,CAAd;AAQA,iBAAKG,SAAL,GAAiB,IAAI,iBAAGT,MAAP,CAAc;AAC3BC,oBAAI,SADuB;AAE3BC,uBAAO,kBAFoB;AAG3BC,yBAAS,mBAAW;AAChBhB,yBAAKuB,YAAL;AACH,iBAL0B;AAM3BJ,sBAAM;AANqB,aAAd,CAAjB;AAQA,iBAAKK,QAAL,GAAgB,IAAI,iBAAGX,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,OAAH,CAFmB;AAG1BC,yBAAS,mBAAW;AAChBhB,yBAAKyB,WAAL;AACH;AALyB,aAAd,CAAhB;AAOA,iBAAKC,OAAL,GAAe,IAAI,iBAAGb,MAAP,CAAc;AACzBC,oBAAI,UADqB;AAEzBC,uBAAO,4BAAG,OAAH,CAFkB;AAGzBC,yBAAS,mBAAW;AAChBhB,yBAAK2B,UAAL;AACH;AALwB,aAAd,CAAf;AAOA,iBAAKC,QAAL,GAAgB,IAAI,iBAAGf,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,OAAH,CAFmB;AAG1BC,yBAAS,mBAAW;AAChBhB,yBAAK6B,WAAL;AACH;AALyB,aAAd,CAAhB;AAOA,iBAAKC,QAAL,GAAgB,IAAI,iBAAGjB,MAAP,CAAc;AAC1BC,oBAAI,WADsB;AAE1BC,uBAAO,4BAAG,OAAH,CAFmB;AAG1BC,yBAAS,mBAAW;AAChBhB,yBAAKD,GAAL,CAASgC,KAAT,CAAeC,IAAf;AACH;AALyB,aAAd,CAAhB;AAOA9C,cAAE+C,IAAF,CACI,CAAC,KAAKrB,QAAN,EAAgB,KAAKQ,MAArB,EAA6B,KAAKE,SAAlC,EAA6C,KAAKI,OAAlD,EAA2D,KAAKE,QAAhE,EAA0E,KAAKJ,QAA/E,EAAyF,KAAKM,QAA9F,CADJ,EAEI,kBAAU;AACN9B,qBAAKU,CAAL,CAAO,iBAAP,EAA0BwB,OAA1B,CAAkCC,OAAOC,GAAzC;AACH,aAJL;;AAOA;AACA,iBAAKnB,SAAL,GAAiB,KAAKR,UAAL,CAAgBQ,SAAhB,CAA0B;AACvCoB,qBAAK,KAAKtC,GAAL,CAASE,OAAT,CAAiBqC,WADiB;AAEvC7C,0BAAU,kBAAS8C,KAAT,EAAgBC,IAAhB,EAAsB;AAC5BxC,yBAAKyC,cAAL,CAAoBF,KAApB,EAA2BC,IAA3B;AACH,iBAJsC;AAKvC1C,4BAAY,oBAASyC,KAAT,EAAgB;AACxB,2BAAOvC,KAAKD,GAAL,CAAS2C,MAAT,CAAgB,CAAC1C,KAAKV,UAAL,CAAgBqD,GAAhB,CAAoBJ,KAApB,CAAD,CAAhB,EAA8CvC,KAAK4C,UAAnD,CAAP;AACH,iBAPsC;AAQvCC,0BAAU,kBAASN,KAAT,EAAgBO,UAAhB,EAA4B;AAClC9C,yBAAK+C,cAAL,CAAoBR,KAApB,EAA2BO,UAA3B;AACH,iBAVsC;AAWvCpD,yBAAS,iBAAS6C,KAAT,EAAgBS,OAAhB,EAAyB;AAC9BhD,yBAAKiD,aAAL,CAAmBV,KAAnB,EAA0BS,OAA1B;AACH,iBAbsC;AAcvCrD,uBAAO,eAAS4C,KAAT,EAAgBS,OAAhB,EAAyB;AAC5BhD,yBAAKkD,WAAL,CAAiBX,KAAjB,EAAwBS,OAAxB;AACH,iBAhBsC;AAiBvCG,yBAAS,iBAASZ,KAAT,EAAgBS,OAAhB,EAAyB;AAC9BhD,yBAAKoD,aAAL,CAAmBb,KAAnB,EAA0BS,OAA1B;AACH,iBAnBsC;AAoBvCK,0BAAU,oBAAW;AACjBrD,yBAAKsD,cAAL;AACH,iBAtBsC;AAuBvCC,4BAAY,sBAAW;AACnBvD,yBAAKS,UAAL,CAAgB+C,QAAhB,CAAyB,WAAzB;AACH,iBAzBsC;AA0BvCC,6BAAa,uBAAW;AACpBzD,yBAAKS,UAAL,CAAgBiD,WAAhB,CAA4B,WAA5B;AACH;AA5BsC,aAA1B,CAAjB;;AA+BA;AACA,iBAAKC,GAAL,GAAW,IAAI,oBAAQxE,IAAZ,CAAiB;AACxB4B,uBAAO,4BAAG,WAAH,CADiB;AAExB6C,2BAAW,KAAKxC,MAAL,CAAYgB;AAFC,aAAjB,CAAX;;AAKA;AACA,iBAAKyB,gBAAL,GAAwB,IAAI,mBAAO1E,IAAX,CAAgB;AACpC2E,qBAAK,yBAD+B;AAEpCF,2BAAW,KAAKlD,CAAL,CAAO,0BAAP,CAFyB;AAGpCqD,sBAAM7E,EAAE8E,MAAF,CAAS,KAAK9D,eAAd,EAA+B;AAAA,2BAAO,CAAC+D,IAAIC,eAAZ;AAAA,iBAA/B,CAH8B;AAIpCC,uBAAO,KAAKlE,OAAL,CAAamE,iBAJgB;AAKpCC,0BAAU,kBAASC,SAAT,EAAoB;AAC1BtE,yBAAKuE,gBAAL,CAAsBD,SAAtB;AACH;AAPmC,aAAhB,CAAxB;;AAUA;AACA,iBAAK5D,CAAL,CAAO,+BAAP,EACK8D,EADL,CACQ,OADR,EACiB,aAAK;AACd,8CAAoB;AAChBpC,yBAAK1B,EAAE+D,EAAEC,MAAJ,CADW;AAEhB3D,2BAAOf,KAAK6D,gBAAL,CAAsBc,IAAtB,EAFS;AAGhBL,+BAAWtE,KAAK6D,gBAAL,CAAsBM,KAAtB,EAHK;AAIhBS,0BAAM5E,KAAKE,eAJK;AAKhB2E,+BAAW;AALK,iBAApB;AAOH,aATL,EAUKL,EAVL,CAUQ,WAVR,EAUqB,aAAK;AAClBC,kBAAEK,cAAF;AACH,aAZL;;AAcA;AACA,iBAAKC,aAAL,GAAqB,IAAI,mBAAO5F,IAAX,CAAgB;AACjC2E,qBAAK,yBAD4B;AAEjCF,2BAAW,KAAKlD,CAAL,CAAO,uBAAP,CAFsB;AAGjCqD,sBAAM,KAAK5D,YAHsB;AAIjCgE,uBAAO,KAAKlE,OAAL,CAAa+E,cAJa;AAKjCX,0BAAU,kBAASY,MAAT,EAAiB;AACvBjF,yBAAKkF,aAAL,CAAmBD,MAAnB;AACH;AAPgC,aAAhB,CAArB;;AAUA;AACA,iBAAKE,MAAL,GAAc,0BAAgB;AAC1BC,4BAAY,KAAK3E,UADS;AAE1BnB,4BAAY,KAAKA,UAFS;AAG1B+F,6BAAa,qBAASC,KAAT,EAAgB;AACzB,wBAAIC,aAAa,yBAAcvF,IAAd,EAAoB,EAAEsF,OAAOA,KAAT,EAApB,CAAjB;AACAtF,yBAAKW,YAAL,CAAkB6E,IAAlB,CAAuB,eAAvB,EAAwCC,MAAxC,CAA+CF,WAAWnD,GAA1D;AACAmD,+BAAWG,MAAX;AACA,2BAAOH,UAAP;AACH;AARyB,aAAhB,CAAd;;AAWA;AACA,iBAAKjG,UAAL,CAAgBkF,EAAhB,CAAmB,QAAnB,EAA6B,iBAAS;AAClCxE,qBAAK2F,YAAL,CAAkBL,KAAlB;AACH,aAFD;AAGA,iBAAKI,MAAL;AACH,SAxL+B;;AA0LhCA,gBAAQ,kBAAW;AACf,gBAAI1C,UAAU,EAAd;AACA,gBAAI,KAAKxD,OAAL,CAAaC,QAAb,KAA0B,CAA9B,EAAiC;AAC7B,oBAAI,KAAKwB,SAAL,CAAe2E,UAAf,EAAJ,EAAiC;AAC7B5C,8BAAU,QAAV;AACH,iBAFD,MAEO;AACHA,8BACI,kGADJ;AAEH;AACJ,aAPD,MAOO;AACH,oBAAI,KAAKxD,OAAL,CAAaI,OAAb,KAAyB,CAA7B,EAAgC;AAC5BoD,6CACI,KAAKxD,OAAL,CAAaC,QADjB;AAGH,iBAJD,MAIO;AACHuD,iDAA2B,KAAKxD,OAAL,CAAaC,QAAxC,gBAA2D,KAAKD,OAAL,CAAaI,OAAxE;AACH;AACJ;AACD,iBAAKc,CAAL,CAAO,kBAAP,EAA2BmF,IAA3B,CAAgC7C,OAAhC;AACA,gBAAI8C,eACA,KAAKtG,OAAL,CAAaI,OAAb,KAAyB,CAAzB,IAA8B,KAAKJ,OAAL,CAAaC,QAAb,GAAwB,KAAKD,OAAL,CAAaE,OAArC,GAA+C,KAAKF,OAAL,CAAaG,KAA5D,GAAoE,CADtG;AAEA,gBAAIoG,eAAe,KAAKvG,OAAL,CAAaI,OAAb,KAAyB,CAAzB,IAA8B,KAAKJ,OAAL,CAAaC,QAAb,GAAwB,CAAzE;AACA,gBAAIuG,iBAAiB,KAAKxG,OAAL,CAAaI,OAAb,KAAyB,CAA9C;AACA,gBAAIqG,aAAa,KAAKzG,OAAL,CAAaC,QAAb,GAAwB,KAAKD,OAAL,CAAaE,OAArC,GAA+C,KAAKF,OAAL,CAAaG,KAA5D,GAAoE,CAArF;AACA,iBAAKiC,QAAL,CAAckE,eAAe,QAAf,GAA0B,SAAxC;AACA,iBAAKtE,QAAL,CAAcuE,eAAe,QAAf,GAA0B,SAAxC;AACA,iBAAKvE,QAAL,CAAcY,GAAd,CAAkB2D,eAAe,UAAf,GAA4B,aAA9C,EAA6D,aAA7D;AACA,iBAAKrE,OAAL,CAAa,KAAKlC,OAAL,CAAaI,OAAb,GAAuB,CAAvB,GAA2B,QAA3B,GAAsC,SAAnD;AACA,iBAAKgB,QAAL,CAAcoF,iBAAiB,QAAjB,GAA4B,SAA1C;AACA,iBAAK5E,MAAL,CAAY4E,iBAAiB,QAAjB,GAA4B,SAAxC;AACA,iBAAK1E,SAAL,CAAe0E,iBAAiB,QAAjB,GAA4B,SAA3C;AACA,iBAAK5E,MAAL,CAAYgB,GAAZ,CAAgB,KAAK/B,eAAL,GAAuB,MAAvB,GAAgC,MAAhD;AACA,iBAAKK,CAAL,CAAO,eAAP,EAAwBuF,aAAa,MAAb,GAAsB,MAA9C;AACA,iBAAKvF,CAAL,CAAO,gBAAP,EAAyBuF,aAAa,MAAb,GAAsB,MAA/C;AACH,SA5N+B;;AA8NhC;AACAxD,wBAAgB,wBAASF,KAAT,EAAgBC,IAAhB,EAAsB;AAClC,iBAAKhD,OAAL,CAAaC,QAAb;AACA,gBAAIyG,YAAY,IAAI,sBAAYC,KAAhB,CAAsB;AAClCrF,oBAAIyB,KAD8B;AAElC6D,2BAAW5D,KAAK6D,IAFkB;AAGlCC,2BAAW9D,KAAK+D,IAHkB;AAIlCC,2BAAWhE,KAAKiE,IAAL,IAAa,OAJU;AAKlCC,2BAAWlE,KAAKmE,IALkB;AAMlCC,2BAAWpE;AANuB,aAAtB,CAAhB;AAQA,iBAAKkD,MAAL;AACA,iBAAKpG,UAAL,CAAgBuH,GAAhB,CAAoBX,SAApB;AACH,SA3O+B;;AA6OhC;AACAnD,wBAAgB,wBAASR,KAAT,EAAgBO,UAAhB,EAA4B;AACxC,gBAAIgE,KAAK,KAAKxH,UAAL,CAAgBqD,GAAhB,CAAoBJ,KAApB,CAAT;AACAuE,eAAGC,GAAH,CAAO,EAAEjE,YAAYA,UAAd,EAA0BkE,QAAQ,SAAlC,EAA6CC,MAAM,EAAnD,EAAP;AACA,iBAAK7G,SAAL,CAAekF,KAAf,CAAqByB,GAArB,CAAyB,YAAzB,EAAuC,KAAKG,iBAAL,CAAuBpE,UAAvB,EAAmCgE,GAAGnE,GAAH,CAAO,WAAP,CAAnC,CAAvC;AACH,SAlP+B;;AAoPhC;AACAM,uBAAe,uBAASV,KAAT,EAAgBS,OAAhB,EAAyB;AACpC,gBAAI8D,KAAK,KAAKxH,UAAL,CAAgBqD,GAAhB,CAAoBJ,KAApB,CAAT;AACAuE,eAAGC,GAAH,CAAO,EAAEjE,YAAY,GAAd,EAAmBkE,QAAQ,SAA3B,EAAP;AACA,iBAAK5G,SAAL,CAAekF,KAAf,CAAqByB,GAArB,CAAyB,YAAzB,EAAuC,KAAKG,iBAAL,CAAuB,GAAvB,EAA4BJ,GAAGnE,GAAH,CAAO,WAAP,CAA5B,CAAvC;AACA,iBAAKwE,gBAAL,IAAyBL,GAAGnE,GAAH,CAAO,WAAP,IAAsB,GAA/C;AACA,iBAAKnD,OAAL,CAAaC,QAAb;AACA,iBAAKD,OAAL,CAAaE,OAAb;AACA,iBAAKgG,MAAL;AACA0B,mBAAOC,gBAAP,CAAwBC,eAAxB;AACH,SA9P+B;;AAgQhC;AACAlE,uBAAe,uBAASb,KAAT,EAAgBS,OAAhB,EAAyB;AACpC,gBAAI8D,KAAK,KAAKxH,UAAL,CAAgBqD,GAAhB,CAAoBJ,KAApB,CAAT;AACAuE,eAAGC,GAAH,CAAO,EAAEC,QAAQ,SAAV,EAAqBC,MAAMjE,OAA3B,EAAP;AACH,SApQ+B;;AAsQhC;AACAE,qBAAa,qBAASX,KAAT,EAAgBS,OAAhB,EAAyB;AAClC,gBAAI8D,KAAK,KAAKxH,UAAL,CAAgBqD,GAAhB,CAAoBJ,KAApB,CAAT;AACAuE,eAAGC,GAAH,CAAO,EAAEjE,YAAY,GAAd,EAAmBkE,QAAQ,OAA3B,EAAoCC,MAAMjE,OAA1C,EAAP;AACA,iBAAK5C,SAAL,CAAekF,KAAf,CAAqByB,GAArB,CAAyB;AACrBjE,4BAAY,KAAKoE,iBAAL,CAAuB,GAAvB,EAA4BJ,GAAGnE,GAAH,CAAO,WAAP,CAA5B,CADS;AAErBqE,wBAAQ;AAFa,aAAzB;AAIA,iBAAKG,gBAAL,IAAyBL,GAAGnE,GAAH,CAAO,WAAP,IAAsB,GAA/C;AACA,iBAAKnD,OAAL,CAAaC,QAAb;AACA,iBAAKD,OAAL,CAAaG,KAAb;AACA,iBAAK+F,MAAL;AACH,SAlR+B;;AAoRhC;AACApC,wBAAgB,0BAAW;AACvB,iBAAKhE,UAAL,CAAgB2C,IAAhB,CAAqB,iBAAS;AAC1B,oBAAIqD,MAAM3C,GAAN,CAAU,QAAV,KAAuB,QAA3B,EAAqC;AACjC2C,0BAAMyB,GAAN,CAAU,QAAV,EAAoB,MAApB;AACH;AACJ,aAJD;AAKA,iBAAKvH,OAAL,CAAaI,OAAb,GAAuB,CAAvB;AACA,iBAAK8F,MAAL;AACH,SA7R+B;;AA+RhC;AACAC,sBAAc,sBAASL,KAAT,EAAgB;AAC1B,gBAAI0B,SAAS1B,MAAM3C,GAAN,CAAU,QAAV,CAAb;AACA,gBAAIqE,UAAU,SAAd,EAAyB;AACrB,qBAAKxH,OAAL,CAAaE,OAAb;AACH,aAFD,MAEO,IAAIsH,UAAU,OAAd,EAAuB;AAC1B,qBAAKxH,OAAL,CAAaG,KAAb;AACH,aAFM,MAEA;AACH,qBAAKH,OAAL,CAAaC,QAAb;AACH;AACD,iBAAKwB,SAAL,CAAesG,MAAf,CAAsBjC,MAAMxE,EAA5B;AACA,iBAAK4E,MAAL;AACH,SA3S+B;;AA6ShC;AACA;AACA;;AAEA;AACArE,mBAAW,qBAAW;AAClB,gBAAI,CAAC,KAAKsC,GAAL,CAAS6D,OAAd,EAAuB;AACnB,qBAAK7D,GAAL,CAAS8D,KAAT;AACA,oBAAIzH,OAAO,IAAX;AACA,qBAAK2D,GAAL,CAAS8B,MAAT,CACI,wBAAc;AACVnG,gCAAY,KAAKA,UADP;AAEVe,qCAAiB,KAAKA,eAFZ;AAGVqH,2BAAO,eAASC,QAAT,EAAmB;AACtB,+BAAO3H,KAAKiB,SAAL,CAAe4F,GAAf,CAAmB,CACtB;AACIJ,kCAAM,KADV;AAEIJ,kCAAMsB,SAAShB,IAFnB;AAGIJ,kCAAMoB,SAASpB,IAHnB;AAIII,kCAAMgB,SAAShB;AAJnB,yBADsB,CAAnB,CAAP;AAQH,qBAZS;AAaViB,8BAAU,kBAASC,WAAT,EAAsB;AAC5B7H,6BAAKV,UAAL,CAAgBiI,MAAhB,CAAuBM,WAAvB;AACH;AAfS,iBAAd,EAgBGzF,GAjBP;AAmBA,qBAAKuB,GAAL,CAASmE,IAAT;AACH,aAvBD,MAuBO;AACH,qBAAKnE,GAAL,CAAS3B,IAAT;AACH;AACJ,SA7U+B;;AA+UhC;AACAT,sBAAc,wBAAW;AACrB,iBAAKN,SAAL,CAAe4F,GAAf,CAAmB,CAAC,EAAER,MAAM,UAAR,EAAoBE,MAAM,CAA1B,EAA6BE,MAAM,KAAnC,EAAD,CAAnB;AACH,SAlV+B;;AAoVhC;AACAhF,qBAAa,uBAAW;AACpB,gBAAI,KAAKjC,OAAL,CAAaC,QAAb,KAA0B,CAA1B,IAA+B,KAAKD,OAAL,CAAaI,OAAb,KAAyB,CAA5D,EAA+D;AAC3D;AACA,oBAAII,OAAO,IAAX;AACA,qBAAKX,WAAL,GAAmB,CAAnB;AACA,qBAAK8H,gBAAL,GAAwB,CAAxB;AACA,qBAAK7H,UAAL,CAAgB2C,IAAhB,CAAqB,iBAAS;AAC1B,wBAAIqD,MAAM3C,GAAN,CAAU,QAAV,KAAuB,MAA3B,EAAmC;AAC/B2C,8BAAMyB,GAAN,CAAU,QAAV,EAAoB,QAApB;AACA/G,6BAAKX,WAAL,IAAoBiG,MAAM3C,GAAN,CAAU,WAAV,CAApB;AACH;AACJ,iBALD;AAMA,qBAAKvC,SAAL,CAAekF,KAAf,CAAqByB,GAArB,CAAyB;AACrBjE,gCAAY,CADS;AAErBkE,4BAAQ;AAFa,iBAAzB;AAIA,qBAAKxH,OAAL,CAAaI,OAAb,GAAuB,KAAKJ,OAAL,CAAaC,QAApC;AACA,qBAAKmD,UAAL,GAAkB,KAAK7C,GAAL,CAASgI,cAAT,EAAlB;;AAEA;AACA,qBAAKC,UAAL;;AAEA;AACA,qBAAK/G,SAAL,CAAegH,KAAf,CAAqB;AACjBnH,wBAAIsG,OAAOc,IAAP,CAAYpH,EADC;AAEjBqH,uCAAmB,KAAKpI,GAAL,CAASE,OAAT,CAAiBkI;AAFnB,iBAArB;AAIA,qBAAKzC,MAAL;AACH;AACJ,SAlX+B;;AAoXhC;AACA/D,oBAAY,sBAAW;AACnB,gBAAI,KAAKnC,OAAL,CAAaI,OAAb,GAAuB,CAA3B,EAA8B;AAC1B,qBAAKQ,SAAL,CAAekF,KAAf,CAAqByB,GAArB,CAAyB,QAAzB,EAAmC,MAAnC;AACArG,kBAAE,kBAAF,EAAsBmF,IAAtB,CAA2B,uDAA3B;AACA,qBAAK5E,SAAL,CAAemH,IAAf;AACH;AACJ,SA3X+B;;AA6XhC;AACAvG,qBAAa,uBAAW;AACpB,gBAAI,KAAKrC,OAAL,CAAaI,OAAb,KAAyB,CAA7B,EAAgC;AAC5B,qBAAKN,UAAL,CAAgBO,KAAhB;AACA,qBAAKL,OAAL,CAAaK,KAAb;AACA,qBAAKoB,SAAL,CAAepB,KAAf;AACA,qBAAKgE,gBAAL,CAAsBM,KAAtB,CAA4B,KAAKlE,OAAL,CAAamE,iBAAzC;AACA,qBAAKW,aAAL,CAAmBZ,KAAnB,CAAyB,KAAKlE,OAAL,CAAa+E,cAAtC;AACA,qBAAK5E,SAAL,CAAekF,KAAf,CAAqByB,GAArB,CAAyB,YAAzB,EAAuC,CAAvC;AACA,qBAAKrB,MAAL;AACH;AACJ,SAxY+B;;AA0YhC;AACAnB,0BAAkB,0BAASD,SAAT,EAAoB+D,aAApB,EAAmC;AACjD,gBAAIrI,OAAO,IAAX;AACA,iBAAKV,UAAL,CAAgB2C,IAAhB,CAAqB,iBAAS;AAC1B,oBACIqD,MAAM3C,GAAN,CAAU,QAAV,KAAuB,MAAvB,KACC2C,MAAM3C,GAAN,CAAU,WAAV,KAA0B3C,KAAKC,OAAL,CAAamE,iBAAvC,IAA4D,CAACiE,aAD9D,CADJ,EAGE;AACE/C,0BAAMyB,GAAN,CAAU,WAAV,EAAuBzC,SAAvB;AACH;AACJ,aAPD;AAQH,SArZ+B;;AAuZhC;AACAY,uBAAe,uBAASD,MAAT,EAAiBoD,aAAjB,EAAgC;AAC3C,gBAAIrI,OAAO,IAAX;AACA,iBAAKV,UAAL,CAAgB2C,IAAhB,CAAqB,iBAAS;AAC1B,oBACIqD,MAAM3C,GAAN,CAAU,QAAV,KAAuB,MAAvB,KACC2C,MAAM3C,GAAN,CAAU,QAAV,KAAuB3C,KAAKC,OAAL,CAAa+E,cAApC,IAAsD,CAACqD,aADxD,CADJ,EAGE;AACE/C,0BAAMyB,GAAN,CAAU,QAAV,EAAoB9B,MAApB;AACH;AACJ,aAPD;AAQH,SAla+B;;AAoahC;AACA+C,oBAAY,sBAAW;AACnB,gBAAIhI,OAAO,IAAX;AACA,gBAAI4E,OAAO,EAAX;AACA,iBAAKtF,UAAL,CAAgB2C,IAAhB,CAAqB,iBAAS;AAC1B,oBAAIqD,MAAM3C,GAAN,CAAU,QAAV,KAAuB,QAAvB,IAAmC2C,MAAM3C,GAAN,CAAU,WAAV,KAA0B,KAAjE,EAAwE;AACpE3C,yBAAKiB,SAAL,CAAesG,MAAf,CAAsBjC,MAAMxE,EAA5B;AACA8D,yBAAK0D,IAAL,CAAUhD,KAAV;AACH;AACJ,aALD;AAMA,gBAAIV,KAAK2D,MAAL,GAAc,CAAlB,EAAqB;AACjB7H,kBAAE8H,UAAF,CAAa;AACTzE,0BAAM,KAAKhE,GAAL,CAAS2C,MAAT,CAAgBkC,IAAhB,CADG;AAETvC,yBAAK,KAAKtC,GAAL,CAASE,OAAT,CAAiBqC,WAFb;AAGT5C,6BAAS,iBAASsD,OAAT,EAAkB;AACvB9D,0BAAE+C,IAAF,CAAO2C,IAAP,EAAa,iBAAS;AAClB5E,iCAAKiD,aAAL,CAAmBqC,MAAMxE,EAAzB;AACH,yBAFD;AAGH,qBAPQ;AAQTnB,2BAAO,eAASqD,OAAT,EAAkB;AACrB9D,0BAAE+C,IAAF,CAAO2C,IAAP,EAAa,iBAAS;AAClB5E,iCAAKkD,WAAL,CAAiBoC,MAAMxE,EAAvB,EAA2BkC,OAA3B;AACH,yBAFD;AAGH;AAZQ,iBAAb;AAcH;AACJ,SA9b+B;;AAgchC;AACAkE,2BAAmB,2BAASpE,UAAT,EAAqByD,IAArB,EAA2B;AAC1C,mBAAO,CAAC,KAAKY,gBAAL,GAAwBrE,aAAayD,IAAtC,IAA8C,KAAKlH,WAA1D;AACH,SAnc+B;;AAqchC;AACAmB,mBAAW,qBAAW;AAClB;AAgCH;AAve+B,KAArB,C","file":"../../../../scripts/mvc/upload/default/default-view.js","sourcesContent":["/** Renders contents of the default uploader */\nimport * as Backbone from \"backbone\";\nimport * as _ from \"underscore\";\nimport _l from \"utils/localization\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/default/default-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LazyLimited from \"mvc/lazy/lazy-limited\";\nimport \"utils/uploadbox\";\n\n/* global Galaxy */\n/* global $ */\n\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: _l(\"Choose local file\"),\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: _l(\"Choose FTP file\"),\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: _l(\"Start\"),\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: _l(\"Pause\"),\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: _l(\"Reset\"),\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: _l(\"Close\"),\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            warning: function(index, message) {\n                self._eventWarning(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: _l(\"FTP files\"),\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new LazyLimited({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function(model) {\n                var upload_row = new UploadRow(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function() {\n        var message = \"\";\n        if (this.counter.announce === 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running === 0) {\n                message = `You added ${\n                    this.counter.announce\n                } file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this.counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running === 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running === 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running === 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set({ percentage: percentage, status: \"running\", info: \"\" });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Warning */\n    _eventWarning: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ status: \"warning\", info: message });\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"queued\") {\n                model.set(\"status\", \"init\");\n            }\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce !== 0 && this.counter.running === 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(model => {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start({\n                id: Galaxy.user.id,\n                chunk_upload_size: this.app.options.chunk_upload_size\n            });\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running === 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function() {\n        var self = this;\n        var list = [];\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"queued\" && model.get(\"file_mode\") == \"ftp\") {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.upload_path,\n                success: function(message) {\n                    _.each(list, model => {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function(message) {\n                    _.each(list, model => {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return `<div class=\"upload-view-default\">\n                    <div class=\"upload-top\">\n                        <h6 class=\"upload-top-info\"/>\n                    </div>\n                    <div class=\"upload-box\">\n                        <div class=\"upload-helper\">\n                            <i class=\"fa fa-files-o\"/>Drop files here\n                        </div>\n                        <table class=\"upload-table ui-table-striped\" style=\"display: none;\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Size</th>\n                                    <th>Type</th>\n                                    <th>Genome</th>\n                                    <th>Settings</th>\n                                    <th>Status</th>\n                                    <th/>\n                                </tr>\n                            </thead>\n                            <tbody/>\n                        </table>\n                    </div>\n                    <div class=\"upload-footer\">\n                        <span class=\"upload-footer-title\">Type (set all):</span>\n                        <span class=\"upload-footer-extension\"/>\n                        <span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/>\n                        <span class=\"upload-footer-title\">Genome (set all):</span>\n                        <span class=\"upload-footer-genome\"/>\n                    </div>\n                    <div class=\"upload-buttons\"/>\n                </div>`;\n    }\n});\n"]}