{"version":3,"sources":["mvc/tours.js"],"names":["giveTourWithData","giveTourById","activeGalaxyTourRunner","Backbone","_","Tour","window","gxy_root","Galaxy","root","TOURPAGE_TEMPLATE","tour_opts","storage","sessionStorage","onEnd","removeItem","delay","orphan","hooked_tour_from_data","each","data","steps","step","preclick","onShow","$","click","postclick","onHide","textinsert","onShown","element","val","trigger","path","console","warn","TourItem","Model","extend","urlRoot","Tours","Collection","url","model","ToursView","View","title","initialize","self","setElement","fetch","success","render","error","tpl","template","tourtags","models","tour","attributes","tags","Untagged","undefined","name","tours","push","tag","charAt","toUpperCase","slice","tourtagorder","Object","keys","sort","$el","html","on","e","preventDefault","elem","target","display","attr","toggleClass","hasClass","css","hookedTourData","setItem","JSON","stringify","init","goTo","restart","tour_id","getJSON","et","parse","getItem","top"],"mappings":"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","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\nimport _l from \"utils/localization\";\n// The following must remain staged out of libs and not sourced from\n// node_modules, until TDTs are bundled.\nimport * as Backbone from \"libs/backbone\";\nimport * as _ from \"libs/underscore\";\nimport \"libs/bootstrap-tour\";\n\n/* global $ */\n/* global Galaxy */\n\n// bootstrap-tour configures a window.Tour object; keep a local ref.\nlet Tour = window.Tour;\n\nvar gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\nconst TOURPAGE_TEMPLATE = `\n    <h2>Galaxy Tours</h2>\n    <p>This page presents a list of interactive tours available on this Galaxy server.\n    Select any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n\n<div class=\"row mb-3\">\n    <div class=\"col-12 btn-group\" role=\"group\" aria-label=\"Tag selector\">\n        <% _.each(tourtagorder, function(tag) { %>\n        <button class=\"btn btn-primary tag-selector-button\" tag-selector-button=\"<%- tag %>\">\n            <%- tag %>\n        </button>\n        <% }); %>\n    </div>\n</div>\n\n<% _.each(tourtagorder, function(tourtagkey) { %>\n<div tag=\"<%- tourtagkey %>\" class=\"row mb-3\">\n    <div class=\"col-12\">\n    <% var tourtag = tourtags[tourtagkey]; %>\n    <h4>\n        <%- tourtag.name %>\n    </h4>\n    <ul class=\"list-group\">\n    <% _.each(tourtag.tours, function(tour) { %>\n        <li class=\"list-group-item\">\n            <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n                <%- tour.attributes.name || tour.id %>\n            </a>\n             - <%- tour.attributes.description || \"No description given.\" %>\n             <% _.each(tour.attributes.tags, function(tag) { %>\n                <span class=\"badge badge-primary\">\n                    <%- tag.charAt(0).toUpperCase() + tag.slice(1) %>\n                </span>\n             <% }); %>\n        </li>\n    <% }); %>\n    </ul>\n    </div>\n</div>\n<% }); %>`;\n\nvar tour_opts = {\n    storage: window.sessionStorage,\n    onEnd: function() {\n        window.sessionStorage.removeItem(\"activeGalaxyTour\");\n    },\n    delay: 150, // Attempts to make it look natural\n    orphan: true\n};\n\nvar hooked_tour_from_data = data => {\n    _.each(data.steps, step => {\n        if (step.preclick) {\n            step.onShow = () => {\n                _.each(step.preclick, preclick => {\n                    // TODO: click delay between clicks\n                    $(preclick).click();\n                });\n            };\n        }\n        if (step.postclick) {\n            step.onHide = () => {\n                _.each(step.postclick, postclick => {\n                    // TODO: click delay between clicks\n                    $(postclick).click();\n                });\n            };\n        }\n        if (step.textinsert) {\n            // Have to manually trigger a change here, for some\n            // elements which have additional logic, like the\n            // upload input box\n            step.onShown = () => {\n                $(step.element)\n                    .val(step.textinsert)\n                    .trigger(\"change\");\n            };\n        }\n        if (step.path) {\n            // Galaxy does *not* support automagic path navigation right now in\n            // Tours -- too many ways to get your client 'stuck' in automatic\n            // navigation loops.  We can probably re-enable this as our client\n            // routing matures.\n            console.warn(\n                \"This Galaxy Tour is attempting to use path navigation.  This is known to be unstable and can possibly get the Galaxy client 'stuck' in a tour, and at this time is not allowed.\"\n            );\n            delete step.path;\n        }\n    });\n    return data;\n};\n\nvar TourItem = Backbone.Model.extend({\n    urlRoot: `${gxy_root}api/tours`\n});\n\nvar Tours = Backbone.Collection.extend({\n    url: `${gxy_root}api/tours`,\n    model: TourItem\n});\n\nexport var ToursView = Backbone.View.extend({\n    title: _l(\"Tours\"),\n    initialize: function() {\n        var self = this;\n        this.setElement(\"<div/>\");\n        this.model = new Tours();\n        this.model.fetch({\n            success: function() {\n                self.render();\n            },\n            error: function() {\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n            }\n        });\n    },\n\n    render: function() {\n        var tpl = _.template(TOURPAGE_TEMPLATE);\n\n        var tourtags = {};\n        _.each(this.model.models, tour => {\n            if (tour.attributes.tags === null) {\n                if (tourtags.Untagged === undefined) {\n                    tourtags.Untagged = { name: \"Untagged\", tours: [] };\n                }\n                tourtags.Untagged.tours.push(tour);\n            } else {\n                _.each(tour.attributes.tags, tag => {\n                    tag = tag.charAt(0).toUpperCase() + tag.slice(1);\n                    if (tourtags[tag] === undefined) {\n                        tourtags[tag] = { name: tag, tours: [] };\n                    }\n                    tourtags[tag].tours.push(tour);\n                });\n            }\n        });\n        var tourtagorder = Object.keys(tourtags).sort();\n\n        this.$el\n            .html(\n                tpl({\n                    tours: this.model.models,\n                    tourtags: tourtags,\n                    tourtagorder: tourtagorder\n                })\n            )\n            .on(\"click\", \".tourItem\", function(e) {\n                e.preventDefault();\n                giveTourById($(this).data(\"tour.id\"));\n            })\n            .on(\"click\", \".tag-selector-button\", e => {\n                var elem = $(e.target);\n                var display = \"block\";\n                var tag = elem.attr(\"tag-selector-button\");\n\n                elem.toggleClass(\"btn-primary\");\n                elem.toggleClass(\"btn-secondary\");\n\n                if (elem.hasClass(\"btn-secondary\")) {\n                    display = \"none\";\n                }\n                $(`div[tag='${tag}']`).css({ display: display });\n            });\n    }\n});\n\nexport function giveTourWithData(data) {\n    let hookedTourData = hooked_tour_from_data(data);\n    window.sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n    // Store tour steps in sessionStorage to easily persist w/o hackery.\n    let tour = new Tour(_.extend({ steps: hookedTourData.steps }, tour_opts));\n    // Always clean restart, since this is a new, explicit execution.\n    tour.init();\n    tour.goTo(0);\n    tour.restart();\n    return tour;\n}\n\nexport function giveTourById(tour_id) {\n    var url = `${gxy_root}api/tours/${tour_id}`;\n    $.getJSON(url, data => {\n        giveTourWithData(data);\n    });\n}\n\nexport function activeGalaxyTourRunner() {\n    var et = JSON.parse(window.sessionStorage.getItem(\"activeGalaxyTour\"));\n    if (et) {\n        et = hooked_tour_from_data(et);\n        if (et && et.steps) {\n            if (window && window.self === window.top) {\n                // Only kick off a new tour if this is the toplevel window (non-iframe).  This\n                // functionality actually *could* be useful, but we'd need to handle it better and\n                // come up with some design guidelines for tours jumping between windows.\n                // Disabling for now.\n                var tour = new Tour(\n                    _.extend(\n                        {\n                            steps: et.steps\n                        },\n                        tour_opts\n                    )\n                );\n                tour.init();\n                tour.restart();\n            }\n        }\n    }\n}\n\nexport default {\n    ToursView: ToursView,\n    giveTourWithData: giveTourWithData,\n    giveTourById: giveTourById,\n    activeGalaxyTourRunner: activeGalaxyTourRunner\n};\n"]}