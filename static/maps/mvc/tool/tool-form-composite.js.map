{"version":3,"sources":["mvc/tool/tool-form-composite.js"],"names":["View","Backbone","extend","initialize","options","self","modal","parent","Galaxy","model","Model","deferred","active_tab","setElement","$","addClass","append","$message","$header","$steps","$el","_configure","render","forms","steps","links","parms","_","each","get","step","i","emit","debug","icon","step_type","title","parseInt","step_label","step_name","annotation","step_version","merge","index","fixed_title","escape","help","citations","collapsible","collapsed","_isDataStep","sustain_version","sustain_repeats","sustain_conditionals","narrow","text_enable","text_disable","cls_enable","cls_disable","errors","messages","initial_errors","cls","hide_operations","needs_refresh","always_refresh","visitInputs","inputs","input","name","output_connections","sub_step","j","step_index","output_connection","input_step_index","push","connections_by_name","connection","input_name","type","step_linked","output_name","wp_count","wp_inputs","_handleWorkflowParameter","value","callback","re","match","exec","String","wp_name","label","color","style","wp_input","wp_linked","backdrop","post_job_actions","pja","action_arguments","arg","data_resolved","context","is_runtime_value","__class__","is_data_input","indexOf","data_ref","length","is_workflow","default_value","flavor","optional","isEmpty","collapsible_value","collapsible_preview","reset","_renderHeader","_renderMessage","_renderParameters","_renderHistory","_renderUseCachedJob","_renderResourceParameters","_renderStep","execute_btn","Button","onclick","_execute","empty","Label","Message","message","status","persistent","fade","step_version_changes","wp_form","onchange","input_list","input_def","_refreshStep","_append","history_form","test_param","cases","workflow_resource_parameters_form","extra_user_preferences","user","attributes","preferences","JSON","parse","display_use_cached_job_checkbox","job_options_form","form","execute","postchange","process","current_state","tool_id","id","tool_version","version","data","create","wait","request","url","root","success","update","resolve","error","response","reject","portlet","html","reduce","memo","short_str","is_simple_input","hide_label","link","ignore","attr","show_progress","set","wait_text","percentage","setTimeout","promise","field","field_list","new_value","undefined","values","source_step","v","multiple","wp_field","wp_value","split","join","trigger","_refreshHistory","history","currHistoryPanel","_refresh_history","clearTimeout","refresh","numOfUnfinishedShownContents","UPDATE_DELAY","_enabled","_submit","history_form_data","job_def","new_history_name","history_id","resource_params","replacement_params","parameters","parameters_normalized","batch","validated","job_inputs","job_input_id","input_value","input_id","input_field","highlight","children","hide","_templateSuccess","isArray","WebhookApp","WebhookView","toolId","toolVersion","input_found","err_data","step_related_errors","error_messages","matchResponse","show","body","_templateError","err_msg","buttons","Close","complete","$container","enabled","lst","startsWith","timesExecuted","destinationBlurb","newHistoryTarget","sanitize","text","stringify"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-composite.js","sourcesContent":["import _l from \"utils/localization\";\n/** This is the run workflow tool form view. */\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport FormData from \"mvc/form/form-data\";\nimport ToolFormBase from \"mvc/tool/tool-form-base\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Webhooks from \"mvc/webhooks\";\nimport WorkflowIcons from \"mvc/workflow/workflow-icons\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new Modal.View();\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.deferred = new Deferred();\n        if (options && options.active_tab) {\n            this.active_tab = options.active_tab;\n        }\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"ui-form-composite\")\n                .append((this.$message = $(\"<div/>\")))\n                .append((this.$header = $(\"<div/>\")))\n                .append((this.$steps = $(\"<div/>\")))\n        );\n        $(\"body\").append(this.$el);\n        this._configure();\n        this.render();\n    },\n\n    /** Configures form/step options for each workflow step */\n    _configure: function() {\n        var self = this;\n        this.forms = [];\n        this.steps = [];\n        this.links = [];\n        this.parms = [];\n        _.each(this.model.get(\"steps\"), (step, i) => {\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", `${i} : Preparing workflow step.`);\n            var icon = WorkflowIcons[step.step_type];\n            var title = `${parseInt(i + 1)}: ${step.step_label || step.step_name}`;\n            if (step.annotation) {\n                title += ` - ${step.annotation}`;\n            }\n            if (step.step_version) {\n                title += ` (Galaxy Version ${step.step_version})`;\n            }\n            step = Utils.merge(\n                {\n                    index: i,\n                    fixed_title: _.escape(title),\n                    icon: icon || \"\",\n                    help: null,\n                    citations: null,\n                    collapsible: true,\n                    collapsed: i > 0 && !self._isDataStep(step),\n                    sustain_version: true,\n                    sustain_repeats: true,\n                    sustain_conditionals: true,\n                    narrow: true,\n                    text_enable: \"Edit\",\n                    text_disable: \"Undo\",\n                    cls_enable: \"fa fa-edit\",\n                    cls_disable: \"fa fa-undo\",\n                    errors: step.messages,\n                    initial_errors: true,\n                    cls: \"ui-portlet-narrow\",\n                    hide_operations: true,\n                    needs_refresh: false,\n                    always_refresh: step.step_type != \"tool\"\n                },\n                step\n            );\n            self.steps[i] = step;\n            self.links[i] = [];\n            self.parms[i] = {};\n        });\n\n        // build linear index of step input pairs\n        _.each(this.steps, (step, i) => {\n            FormData.visitInputs(step.inputs, (input, name) => {\n                self.parms[i][name] = input;\n            });\n        });\n\n        // iterate through data input modules and collect linked sub steps\n        _.each(this.steps, (step, i) => {\n            _.each(step.output_connections, output_connection => {\n                _.each(self.steps, (sub_step, j) => {\n                    sub_step.step_index === output_connection.input_step_index && self.links[i].push(sub_step);\n                });\n            });\n        });\n\n        // convert all connected data inputs to hidden fields with proper labels,\n        // and track the linked source step\n        _.each(this.steps, (step, i) => {\n            _.each(self.steps, (sub_step, j) => {\n                var connections_by_name = {};\n                _.each(step.output_connections, connection => {\n                    sub_step.step_index === connection.input_step_index &&\n                        (connections_by_name[connection.input_name] = connection);\n                });\n                _.each(self.parms[j], (input, name) => {\n                    var connection = connections_by_name[name];\n                    if (connection) {\n                        input.type = \"hidden\";\n                        input.help = input.step_linked ? `${input.help}, ` : \"\";\n                        input.help += `Output dataset '${connection.output_name}' from step ${parseInt(i) + 1}`;\n                        input.step_linked = input.step_linked || [];\n                        input.step_linked.push({ index: step.index, step_type: step.step_type });\n                    }\n                });\n            });\n        });\n\n        // identify and configure workflow parameters\n        var wp_count = 0;\n        this.wp_inputs = {};\n        function _handleWorkflowParameter(value, callback) {\n            var re = /\\$\\{(.+?)\\}/g;\n            var match;\n            while ((match = re.exec(String(value)))) {\n                var wp_name = match[1];\n                callback(\n                    (self.wp_inputs[wp_name] = self.wp_inputs[wp_name] || {\n                        label: wp_name,\n                        name: wp_name,\n                        type: \"text\",\n                        color: `hsl( ${++wp_count * 100}, 70%, 30% )`,\n                        style: \"ui-form-wp-source\",\n                        links: []\n                    })\n                );\n            }\n        }\n        _.each(this.steps, (step, i) => {\n            _.each(self.parms[i], (input, name) => {\n                _handleWorkflowParameter(input.value, wp_input => {\n                    wp_input.links.push(step);\n                    input.wp_linked = true;\n                    input.type = \"text\";\n                    input.backdrop = true;\n                    input.style = \"ui-form-wp-target\";\n                });\n            });\n            _.each(step.post_job_actions, pja => {\n                _.each(pja.action_arguments, arg => {\n                    _handleWorkflowParameter(arg, () => {});\n                });\n            });\n        });\n\n        // select fields are shown for dynamic fields if all putative data inputs are available,\n        // or if an explicit reference is specified as data_ref and available\n        _.each(this.steps, (step, i) => {\n            if (step.step_type == \"tool\") {\n                var data_resolved = true;\n                FormData.visitInputs(step.inputs, (input, name, context) => {\n                    var is_runtime_value = input.value && input.value.__class__ == \"RuntimeValue\";\n                    var is_data_input = [\"data\", \"data_collection\"].indexOf(input.type) != -1;\n                    var data_ref = context[input.data_ref];\n                    input.step_linked && !self._isDataStep(input.step_linked) && (data_resolved = false);\n                    input.options &&\n                        ((input.options.length == 0 && !data_resolved) || input.wp_linked) &&\n                        (input.is_workflow = true);\n                    data_ref &&\n                        (input.is_workflow =\n                            (data_ref.step_linked && !self._isDataStep(data_ref.step_linked)) || input.wp_linked);\n                    (is_data_input || (input.value && input.value.__class__ == \"RuntimeValue\" && !input.step_linked)) &&\n                        (step.collapsed = false);\n                    is_runtime_value && (input.value = input.default_value);\n                    input.flavor = \"workflow\";\n                    if (!is_runtime_value && !is_data_input && input.type !== \"hidden\" && !input.wp_linked) {\n                        if (input.optional || (!Utils.isEmpty(input.value) && input.value !== \"\")) {\n                            input.collapsible_value = input.value;\n                            input.collapsible_preview = true;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    render: function() {\n        var self = this;\n        this.deferred.reset();\n        this._renderHeader();\n        this._renderMessage();\n        this._renderParameters();\n        this._renderHistory();\n        this._renderUseCachedJob();\n        this._renderResourceParameters();\n        _.each(this.steps, step => {\n            self._renderStep(step);\n        });\n    },\n\n    /** Render header */\n    _renderHeader: function() {\n        var self = this;\n        this.execute_btn = new Ui.Button({\n            icon: \"fa-check\",\n            title: _l(\"Run workflow\"),\n            cls: \"btn btn-primary\",\n            onclick: function() {\n                self._execute();\n            }\n        });\n        this.$header\n            .addClass(\"ui-form-header\")\n            .empty()\n            .append(\n                new Ui.Label({\n                    title: `Workflow: ${this.model.get(\"name\")}`\n                }).$el\n            )\n            .append(this.execute_btn.$el);\n    },\n\n    /** Render message */\n    _renderMessage: function() {\n        this.$message.empty();\n        if (this.model.get(\"has_upgrade_messages\")) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools in this workflow may have changed since it was last saved or some errors were found. The workflow may still run, but any new options will have default values. Please review the messages below to make a decision about whether the changes will affect your analysis.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n        var step_version_changes = this.model.get(\"step_version_changes\");\n        if (step_version_changes && step_version_changes.length > 0) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools are being executed with different versions compared to those available when this workflow was last saved because the other versions are not or no longer available on this Galaxy instance. To upgrade your workflow and dismiss this message simply edit the workflow and re-save it.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderParameters: function() {\n        var self = this;\n        this.wp_form = null;\n        if (!_.isEmpty(this.wp_inputs)) {\n            this.wp_form = new Form({\n                title: \"<b>Workflow Parameters</b>\",\n                inputs: this.wp_inputs,\n                cls: \"ui-portlet-narrow\",\n                onchange: function() {\n                    _.each(self.wp_form.input_list, (input_def, i) => {\n                        _.each(input_def.links, step => {\n                            self._refreshStep(step);\n                        });\n                    });\n                }\n            });\n            this._append(this.$steps.empty(), this.wp_form.$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderHistory: function() {\n        this.history_form = new Form({\n            cls: \"ui-portlet-narrow\",\n            title: \"<b>History Options</b>\",\n            inputs: [\n                {\n                    type: \"conditional\",\n                    name: \"new_history\",\n                    test_param: {\n                        name: \"check\",\n                        label: \"Send results to a new history\",\n                        type: \"boolean\",\n                        value: \"false\",\n                        help: \"\"\n                    },\n                    cases: [\n                        {\n                            value: \"true\",\n                            inputs: [\n                                {\n                                    name: \"name\",\n                                    label: \"History name\",\n                                    type: \"text\",\n                                    value: this.model.get(\"name\")\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        });\n        this._append(this.$steps, this.history_form.$el);\n    },\n\n    /** Render Workflow Options */\n    _renderResourceParameters: function() {\n        this.workflow_resource_parameters_form = null;\n        if (!_.isEmpty(this.model.get(\"workflow_resource_parameters\"))) {\n            this.workflow_resource_parameters_form = new Form({\n                cls: \"ui-portlet-narrow\",\n                title: \"<b>Workflow Resource Options</b>\",\n                inputs: this.model.get(\"workflow_resource_parameters\")\n            });\n            this._append(this.$steps, this.workflow_resource_parameters_form.$el);\n        }\n    },\n\n    /** Render job caching option */\n    _renderUseCachedJob: function() {\n        var extra_user_preferences = {};\n        if (Galaxy.user.attributes.preferences && \"extra_user_preferences\" in Galaxy.user.attributes.preferences) {\n            extra_user_preferences = JSON.parse(Galaxy.user.attributes.preferences.extra_user_preferences);\n        }\n        var display_use_cached_job_checkbox =\n            \"use_cached_job|use_cached_job_checkbox\" in extra_user_preferences\n                ? extra_user_preferences[\"use_cached_job|use_cached_job_checkbox\"]\n                : false;\n        this.display_use_cached_job_checkbox = display_use_cached_job_checkbox === \"true\";\n        if (this.display_use_cached_job_checkbox) {\n            this.job_options_form = new Form({\n                cls: \"ui-portlet-narrow\",\n                title: \"<b>Job re-use Options</b>\",\n                inputs: [\n                    {\n                        type: \"conditional\",\n                        name: \"use_cached_job\",\n                        test_param: {\n                            name: \"check\",\n                            label: \"BETA: Attempt to reuse jobs with identical parameters?\",\n                            type: \"boolean\",\n                            value: \"false\",\n                            help: \"This may skip executing jobs that you have already run.\"\n                        }\n                    }\n                ]\n            });\n            this._append(this.$steps, this.job_options_form.$el);\n        }\n    },\n\n    /** Render step */\n    _renderStep: function(step) {\n        var self = this;\n        var form = null;\n        this.deferred.execute(promise => {\n            self.$steps.addClass(\"ui-steps\");\n            if (step.step_type == \"tool\") {\n                step.postchange = function(process, form) {\n                    var self = this;\n                    var current_state = {\n                        tool_id: step.id,\n                        tool_version: step.version,\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    form.wait(true);\n                    Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Sending current state.\", current_state);\n                    Utils.request({\n                        type: \"POST\",\n                        url: `${Galaxy.root}api/tools/${step.id}/build`,\n                        data: current_state,\n                        success: function(data) {\n                            form.update(data);\n                            form.wait(false);\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Received new model.\", data);\n                            process.resolve();\n                        },\n                        error: function(response) {\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Refresh request failed.\", response);\n                            process.reject();\n                        }\n                    });\n                };\n                form = new ToolFormBase(step);\n                if (step.post_job_actions && step.post_job_actions.length) {\n                    form.portlet.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-element-disabled\")\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-title\")\n                                    .html(\"<b>Job Post Actions</b>\")\n                            )\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-preview\")\n                                    .html(\n                                        _.reduce(\n                                            step.post_job_actions,\n                                            (memo, value) => `${memo} ${value.short_str}`,\n                                            \"\"\n                                        )\n                                    )\n                            )\n                    );\n                }\n            } else {\n                var is_simple_input = [\"data_input\", \"data_collection_input\"].indexOf(step.step_type) != -1;\n                _.each(step.inputs, input => {\n                    input.flavor = \"module\";\n                    input.hide_label = is_simple_input;\n                });\n                form = new Form(\n                    Utils.merge(\n                        {\n                            title: step.fixed_title,\n                            onchange: function() {\n                                _.each(self.links[step.index], link => {\n                                    self._refreshStep(link);\n                                });\n                            },\n                            inputs:\n                                step.inputs && step.inputs.length > 0\n                                    ? step.inputs\n                                    : [\n                                          {\n                                              type: \"hidden\",\n                                              name: \"No options available.\",\n                                              ignore: null\n                                          }\n                                      ]\n                        },\n                        step\n                    )\n                );\n                if (step.step_label) {\n                    form.$el.attr(\"step-label\", step.step_label);\n                }\n            }\n            self.forms[step.index] = form;\n            self._append(self.$steps, form.$el);\n            step.needs_refresh && self._refreshStep(step);\n            form.portlet[!self.show_progress ? \"enable\" : \"disable\"]();\n            self.show_progress &&\n                self.execute_btn.model.set({\n                    wait: true,\n                    wait_text: \"Preparing...\",\n                    percentage: (step.index + 1) * 100.0 / self.steps.length\n                });\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", `${step.index} : Workflow step state ready.`, step);\n            setTimeout(() => {\n                promise.resolve();\n            }, 0);\n        });\n    },\n\n    /** Refreshes step values from source step values */\n    _refreshStep: function(step) {\n        var self = this;\n        var form = this.forms[step.index];\n        if (form) {\n            _.each(self.parms[step.index], (input, name) => {\n                if (input.step_linked || input.wp_linked) {\n                    var field = form.field_list[form.data.match(name)];\n                    if (field) {\n                        var new_value = undefined;\n                        if (input.step_linked) {\n                            new_value = { values: [] };\n                            _.each(input.step_linked, source_step => {\n                                if (self._isDataStep(source_step)) {\n                                    var value = self.forms[source_step.index].data.create().input;\n                                    value &&\n                                        _.each(value.values, v => {\n                                            new_value.values.push(v);\n                                        });\n                                }\n                            });\n                            if (!input.multiple && new_value.values.length > 0) {\n                                new_value = {\n                                    values: [new_value.values[0]]\n                                };\n                            }\n                        } else if (input.wp_linked) {\n                            new_value = input.value;\n                            var re = /\\$\\{(.+?)\\}/g;\n                            var match;\n                            while ((match = re.exec(input.value))) {\n                                var wp_field = self.wp_form.field_list[self.wp_form.data.match(match[1])];\n                                var wp_value = wp_field && wp_field.value();\n                                if (wp_value) {\n                                    new_value = new_value.split(match[0]).join(wp_value);\n                                }\n                            }\n                        }\n                        if (new_value !== undefined) {\n                            field.value(new_value);\n                        }\n                    }\n                }\n            });\n            form.trigger(\"change\");\n        } else {\n            step.needs_refresh = true;\n        }\n    },\n\n    /** Refresh the history after job submission while form is shown */\n    _refreshHistory: function() {\n        var self = this;\n        var history = parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.model;\n        this._refresh_history && clearTimeout(this._refresh_history);\n        if (history) {\n            history.refresh().success(() => {\n                if (history.numOfUnfinishedShownContents() === 0) {\n                    self._refresh_history = setTimeout(() => {\n                        self._refreshHistory();\n                    }, history.UPDATE_DELAY);\n                }\n            });\n        }\n    },\n\n    /** Build remaining steps */\n    _execute: function() {\n        var self = this;\n        this.show_progress = true;\n        this._enabled(false);\n        this.deferred.execute(promise => {\n            setTimeout(() => {\n                promise.resolve();\n                self._submit();\n            }, 0);\n        });\n    },\n\n    /** Validate and submit workflow */\n    _submit: function() {\n        var self = this;\n        var history_form_data = this.history_form.data.create();\n        var job_def = {\n            new_history_name: history_form_data[\"new_history|name\"] ? history_form_data[\"new_history|name\"] : null,\n            history_id: !history_form_data[\"new_history|name\"] ? this.model.get(\"history_id\") : null,\n            resource_params: this.workflow_resource_parameters_form\n                ? this.workflow_resource_parameters_form.data.create()\n                : {},\n            replacement_params: this.wp_form ? this.wp_form.data.create() : {},\n            parameters: {},\n            // Tool form will submit flat maps for each parameter\n            // (e.g. \"repeat_0|cond|param\": \"foo\" instead of nested\n            // data structures).\n            parameters_normalized: true,\n            // Tool form always wants a list of invocations back\n            // so that inputs can be batched.\n            batch: true\n        };\n        if (this.display_use_cached_job_checkbox) {\n            job_def[\"use_cached_job\"] = this.job_options_form.data.create()[\"use_cached_job|check\"] === \"true\";\n        }\n        var validated = true;\n        for (var i in this.forms) {\n            var form = this.forms[i];\n            var job_inputs = form.data.create();\n            var step = self.steps[i];\n            var step_index = step.step_index;\n            form.trigger(\"reset\");\n            for (var job_input_id in job_inputs) {\n                var input_value = job_inputs[job_input_id];\n                var input_id = form.data.match(job_input_id);\n                var input_field = form.field_list[input_id];\n                var input_def = form.input_list[input_id];\n                if (!input_def.step_linked) {\n                    if (this._isDataStep(step)) {\n                        validated = input_value && input_value.values && input_value.values.length > 0;\n                    } else {\n                        validated =\n                            input_def.optional ||\n                            (input_def.is_workflow && input_value !== \"\") ||\n                            (!input_def.is_workflow && input_value !== null);\n                    }\n                    if (!validated) {\n                        form.highlight(input_id);\n                        break;\n                    }\n                    job_def.parameters[step_index] = job_def.parameters[step_index] || {};\n                    job_def.parameters[step_index][job_input_id] = job_inputs[job_input_id];\n                }\n            }\n            if (!validated) {\n                break;\n            }\n        }\n        if (!validated) {\n            self._enabled(true);\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation failed.\", job_def);\n        } else {\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation complete.\", job_def);\n            Utils.request({\n                type: \"POST\",\n                url: `${Galaxy.root}api/workflows/${this.model.id}/invocations`,\n                data: job_def,\n                success: function(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission successful.\", response);\n                    self.$el.children().hide();\n                    self.$el.append(self._templateSuccess(response));\n\n                    // Show Webhook if job is running\n                    if ($.isArray(response) && response.length > 0) {\n                        self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                        var WebhookApp = new Webhooks.WebhookView({\n                            type: \"workflow\",\n                            toolId: job_def.tool_id,\n                            toolVersion: job_def.tool_version\n                        });\n                    }\n\n                    self._refreshHistory();\n                },\n                error: function(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission failed.\", response);\n                    var input_found = false;\n                    if (response && response.err_data) {\n                        for (var i in self.forms) {\n                            var form = self.forms[i];\n                            var step_related_errors = response.err_data[form.model.get(\"step_index\")];\n                            if (step_related_errors) {\n                                var error_messages = form.data.matchResponse(step_related_errors);\n                                for (var input_id in error_messages) {\n                                    form.highlight(input_id, error_messages[input_id]);\n                                    input_found = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!input_found) {\n                        self.modal.show({\n                            title: _l(\"Workflow submission failed\"),\n                            body: self._templateError(job_def, response && response.err_msg),\n                            buttons: {\n                                Close: function() {\n                                    self.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                },\n                complete: function() {\n                    self._enabled(true);\n                }\n            });\n        }\n    },\n\n    /** Append new dom to body */\n    _append: function($container, $el) {\n        $container.append(\"<p/>\").append($el);\n    },\n\n    /** Set enabled/disabled state */\n    _enabled: function(enabled) {\n        this.execute_btn.model.set({\n            wait: !enabled,\n            wait_text: \"Sending...\",\n            percentage: -1\n        });\n        this.wp_form && this.wp_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        this.history_form && this.history_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        _.each(this.forms, form => {\n            form && form.portlet[enabled ? \"enable\" : \"disable\"]();\n        });\n    },\n\n    /** Is data input module/step */\n    _isDataStep: function(steps) {\n        var lst = $.isArray(steps) ? steps : [steps];\n        for (var i = 0; i < lst.length; i++) {\n            var step = lst[i];\n            if (!step || !step.step_type || !step.step_type.startsWith(\"data\")) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /** Templates */\n    _templateSuccess: function(response) {\n        if ($.isArray(response) && response.length > 0) {\n            let timesExecuted = \"\";\n            // Default destination blurb, used for a single execution, same history.\n            let destinationBlurb =\n                \"You can check the status of queued jobs and view the resulting data by refreshing the History pane, if this has not already happened automatically.\";\n            let newHistoryTarget =\n                (response[0].history_id &&\n                    Galaxy.currHistoryPanel &&\n                    Galaxy.currHistoryPanel.model.id != response[0].history_id) ||\n                false;\n            if (response.length > 1) {\n                // Executed more than one time, build blurb but skip history link.\n                timesExecuted = `<em> - ${response.length} times</em>`;\n                if (newHistoryTarget) {\n                    destinationBlurb = `This workflow will generate results in multiple histories.  You can observe progress in the <a href=\"${\n                        Galaxy.root\n                    }history/view_multiple\">history multi-view</a>.`;\n                }\n            } else if (newHistoryTarget) {\n                // Single execution, with a destination other than the\n                // current history.  Present a link.\n                destinationBlurb = `This workflow will generate results in a new history. <a href=\"${\n                    Galaxy.root\n                }history/switch_to_history?hist_id=${response[0].history_id}\">Switch to that history now</a>.`;\n            }\n            return $(`\n                <div class=\"donemessagelarge\">\n                    <p>\n                        Successfully invoked workflow <b>${Utils.sanitize(this.model.get(\"name\"))}</b>${timesExecuted}.\n                    </p>\n                    <p>\n                        ${destinationBlurb}\n                    </p>\n                </div>`);\n        } else {\n            return this._templateError(response, \"Invalid success response. No invocations found.\");\n        }\n    },\n\n    _templateError: function(response, err_msg) {\n        return $(\"<div/>\")\n            .addClass(\"errormessagelarge\")\n            .append(\n                $(\"<p/>\").text(\n                    `The server could not complete the request. Please contact the Galaxy Team if this error persists. ${JSON.stringify(\n                        err_msg\n                    ) || \"\"}`\n                )\n            )\n            .append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n});\nexport default {\n    View: View\n};\n"]}