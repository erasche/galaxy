{"version":3,"sources":["mvc/ui/ui-rules-edit.js"],"names":["View","Backbone","extend","initialize","options","target","reset","view","browse_button","ButtonIcon","title","icon","tooltip","onclick","_fetcCollectionAndEdit","_showRuleEditor","on","onchange","value","setElement","_template","$","append","$el","rulesDisplayInstance","vm","document","createElement","instance","propsData","initialRules","rules","mapping","$mount","workflowRuntimeCompatible","url","Galaxy","root","id","get","then","_showCollection","response","catch","_renderFetchError","elements","data","elementsType","importType","_value","saveRulesFn","_handleRulesSave","ruleBasedCollectionCreatorModal","done","_setValue","e","console","log","new_value","undefined","_getValue","refreshDefinition","input_def","_refresh","JSON","parse","trigger","inputRules","validate","message","length","rule","error","valid"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-rules-edit.js","sourcesContent":["import axios from \"axios\";\nimport _l from \"utils/localization\";\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Vue from \"vue\";\nimport ListCollectionCreator from \"mvc/collection/list-collection-creator\";\nimport RulesDisplay from \"components/RulesDisplay.vue\";\n\n/**\n * Bridge rule based builder and the tool form.\n */\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function(options) {\n        // link this\n        this.options = options;\n        this.target = options.target;\n        this.reset = null;\n        const view = this;\n\n        // create insert new list element button\n        this.browse_button = new Ui.ButtonIcon({\n            title: _l(\"Edit\"),\n            icon: \"fa fa-edit\",\n            tooltip: _l(\"Edit Rules\"),\n            onclick: () => {\n                if (view.target) {\n                    view._fetcCollectionAndEdit();\n                } else {\n                    view._showRuleEditor(null);\n                }\n            }\n        });\n\n        // add change event. fires on trigger\n        this.on(\"change\", () => {\n            if (options.onchange) {\n                options.onchange(this.value());\n            }\n        });\n\n        // create elements\n        this.setElement(this._template(options));\n        this.$(\".ui-rules-edit-button\").append(this.browse_button.$el);\n        var rulesDisplayInstance = Vue.extend(RulesDisplay);\n        var vm = document.createElement(\"div\");\n        this.$(\".ui-rules-preview\").append(vm);\n        this.instance = new rulesDisplayInstance({\n            propsData: {\n                initialRules: {\n                    rules: [],\n                    mapping: []\n                }\n            }\n        });\n        this.instance.$mount(vm);\n        this.workflowRuntimeCompatible = false;\n    },\n\n    _fetcCollectionAndEdit: function() {\n        const view = this;\n        const url = `${Galaxy.root}api/dataset_collections/${view.target.id}?instance_type=history`;\n        axios\n            .get(url)\n            .then(response => this._showCollection(response))\n            .catch(view._renderFetchError);\n    },\n\n    _showCollection: function(response) {\n        const elements = response.data;\n        this._showRuleEditor(elements);\n    },\n\n    _showRuleEditor: function(elements) {\n        const elementsType = \"collection_contents\";\n        const importType = \"collections\";\n        let value = this._value;\n        const options = {\n            saveRulesFn: rules => this._handleRulesSave(rules),\n            initialRules: value\n        };\n        ListCollectionCreator.ruleBasedCollectionCreatorModal(elements, elementsType, importType, options).done(\n            () => {}\n        );\n    },\n\n    _handleRulesSave: function(rules) {\n        this._setValue(rules);\n    },\n\n    _renderFetchError: function(e) {\n        console.log(e);\n        console.log(\"problem fetching collection\");\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return `\n            <div class=\"ui-rules-edit\">\n                <span class=\"ui-rules-preview\" />\n                <span class=\"ui-rules-edit-button\" />\n            </div>\n        `;\n    },\n\n    /** Return/Set currently selected genomespace filename */\n    value: function(new_value) {\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        } else {\n            return this._getValue();\n        }\n    },\n\n    // update\n    refreshDefinition: function(input_def) {\n        this.target = input_def.target;\n        // refresh\n        this._refresh();\n    },\n\n    // refresh\n    _refresh: function() {},\n\n    // get value\n    _getValue: function() {\n        return this._value;\n    },\n\n    // set value\n    _setValue: function(new_value) {\n        if (new_value) {\n            if (typeof new_value == \"string\") {\n                new_value = JSON.parse(new_value);\n            }\n            this._value = new_value;\n            this.trigger(\"change\");\n            this.instance.inputRules = new_value;\n            if (this.reset) {\n                this.reset();\n                this.reset = null;\n            }\n        }\n    },\n\n    validate: function(reset) {\n        const value = this._value;\n        let message = null;\n        if (!value || value.rules.length === 0) {\n            message = \"No rules defined, define at least one rule.\";\n        } else if (value.mapping.length === 0) {\n            message = \"No collection identifiers defined, specify at least one collection identifier.\";\n        } else {\n            for (let rule of value.rules) {\n                if (rule.error) {\n                    message = \"One or more rules in error.\";\n                    break;\n                }\n            }\n        }\n        this.reset = reset;\n        return { valid: !message, message: message };\n    }\n});\n\nexport default {\n    View: View\n};\n"]}