{"version":3,"sources":["mvc/visualization/chart/views/viewer.js"],"names":["Backbone","View","extend","initialize","app","options","self","chart","setElement","$","addClass","append","$info","$icon","$text","_fullscreen","$el","_createContainer","on","confirmed","get","plugin","specs","confirm","deferred","execute","process","console","debug","_draw","state","$container","removeClass","show","html","hide","margin","css","window","height","resize","tag","n","remove","targets","i","container_id","uid","container_el","width","parseInt","attr","push","n_panels","settings","groups","length","set","time","chart_load","dataset"],"mappings":"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","file":"../../../../../scripts/mvc/visualization/chart/views/viewer.js","sourcesContent":["/**\n *  The viewer creates and manages the dom elements used by the visualization plugins to draw the chart.\n *  This is the last class of the charts core classes before handing control over to the visualization plugins.\n */\nimport Utils from \"utils/utils\";\n\nexport default Backbone.View.extend({\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.chart = this.app.chart;\n        this.options = options;\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"charts-viewer\")\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"info\")\n                        .append($(\"<span/>\").addClass(\"icon\"))\n                        .append($(\"<span/>\").addClass(\"text\"))\n                )\n        );\n        this.$info = this.$(\".info\");\n        this.$icon = this.$(\".icon\");\n        this.$text = this.$(\".text\");\n        this._fullscreen(this.$el, 20);\n        this._createContainer(\"div\");\n        this.chart.on(\"redraw\", function(confirmed) {\n            if (!self.chart.get(\"modified\") || !self.chart.plugin.specs.confirm || confirmed) {\n                self.app.deferred.execute(function(process) {\n                    console.debug(\"viewer:redraw() - Redrawing...\");\n                    self._draw(process, self.chart);\n                });\n            } else {\n                self.chart.state(\"info\", \"Please confirm the settings before rendering the results.\");\n            }\n        });\n        this.chart.on(\"set:state\", function() {\n            var $container = self.$(\".charts-viewer-container\");\n            var $info = self.$info;\n            var $icon = self.$icon;\n            var $text = self.$text;\n            $icon.removeClass();\n            $info.show();\n            $text.html(self.chart.get(\"state_info\"));\n            var state = self.chart.get(\"state\");\n            switch (state) {\n                case \"ok\":\n                    $info.hide();\n                    $container.show();\n                    break;\n                case \"failed\":\n                    $icon.addClass(\"icon fa fa-warning\");\n                    $container.hide();\n                    break;\n                case \"info\":\n                    $icon.addClass(\"icon fa fa-info\");\n                    $container.hide();\n                    break;\n                default:\n                    $icon.addClass(\"icon fa fa-spinner fa-spin\");\n                    $container.show();\n            }\n        });\n    },\n\n    /** Force resize to fullscreen */\n    _fullscreen: function($el, margin) {\n        $el.css(\"height\", $(window).height() - margin);\n        $(window).resize(function() {\n            $el.css(\"height\", $(window).height() - margin);\n        });\n    },\n\n    /** A chart may contain multiple sub charts/containers which are created here */\n    _createContainer: function(tag, n) {\n        tag = tag || \"div\";\n        n = n || 1;\n        this.$(\".charts-viewer-container\").remove();\n        this.targets = [];\n        for (var i = 0; i < n; i++) {\n            var container_id = Utils.uid();\n            var container_el = $(\"<div/>\")\n                .addClass(\"charts-viewer-container\")\n                .width(parseInt(100 / n) + \"%\")\n                .append($(\"<\" + tag + \" class='charts-viewer-canvas' />\").attr(\"id\", container_id));\n            this.$el.append(container_el);\n            this.targets.push(container_id);\n        }\n    },\n\n    /** Draws a new chart by loading and executing the corresponding chart wrapper */\n    _draw: function(process, chart) {\n        var n_panels = chart.settings.get(\"__use_panels\") == \"true\" ? chart.groups.length : 1;\n        this._createContainer(chart.plugin.specs.tag, n_panels);\n        chart.set(\"date\", Utils.time());\n        chart.state(\"wait\", \"Please wait...\");\n        this.app.chart_load({ process: process, chart: chart, dataset: this.app.dataset, targets: this.targets });\n    }\n});\n"]}