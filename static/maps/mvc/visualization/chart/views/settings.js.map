{"version":3,"sources":["mvc/visualization/chart/views/settings.js"],"names":["Backbone","View","extend","initialize","app","options","self","chart","setElement","listenTo","render","inputs","clone","plugin","settings","panel_option","specs","use_panels","push","name","type","label","help","set","$el","empty","addClass","_","size","visitInputs","input","model_value","get","undefined","hidden","value","form","cls","onchange","data","create","trigger","append"],"mappings":";;;;;;;;;;;;;;;;;;;sBAKeA,SAASC,IAAT,CAAcC,MAAd,CAAqB;AAChCC,oBAAY,oBAASC,GAAT,EAAcC,OAAd,EAAuB;AAC/B,gBAAIC,OAAO,IAAX;AACA,iBAAKC,KAAL,GAAaH,IAAIG,KAAjB;AACA,iBAAKC,UAAL,CAAgB,QAAhB;AACA,iBAAKC,QAAL,CAAc,KAAKF,KAAnB,EAA0B,MAA1B,EAAkC,YAAW;AACzCD,qBAAKI,MAAL;AACH,aAFD;AAGH,SAR+B;AAShCA,gBAAQ,kBAAW;AACf,gBAAIJ,OAAO,IAAX;AACA,gBAAIK,SAAS,gBAAMC,KAAN,CAAY,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,QAA9B,KAA2C,EAAxD;AACA,gBAAIC,eAAe,KAAKR,KAAL,CAAWM,MAAX,CAAkBG,KAAlB,CAAwBC,UAA3C;AACA,gBAAIF,gBAAgB,UAApB,EAAgC;AAC5BJ,uBAAOO,IAAP,CAAY;AACRC,0BAAM,cADE;AAERC,0BAAM,SAFE;AAGRC,2BAAO,kBAHC;AAIRC,0BAAM;AAJE,iBAAZ;AAMH,aAPD,MAOO;AACH,qBAAKf,KAAL,CAAWO,QAAX,CAAoBS,GAApB,CAAwB,cAAxB,EAAwCR,gBAAgB,KAAhB,GAAwB,MAAxB,GAAiC,OAAzE;AACH;AACD,iBAAKS,GAAL,CAASC,KAAT,GAAiBC,QAAjB,CAA0B,kBAA1B;AACA,gBAAIC,EAAEC,IAAF,CAAOjB,MAAP,IAAiB,CAArB,EAAwB;AACpB,mCAASkB,WAAT,CAAqBlB,MAArB,EAA6B,UAASmB,KAAT,EAAgBX,IAAhB,EAAsB;AAC/C,wBAAIY,cAAczB,KAAKC,KAAL,CAAWO,QAAX,CAAoBkB,GAApB,CAAwBb,IAAxB,CAAlB;AACA,wBAAIY,gBAAgBE,SAAhB,IAA6B,CAACH,MAAMI,MAAxC,EAAgD;AAC5CJ,8BAAMK,KAAN,GAAcJ,WAAd;AACH;AACJ,iBALD;AAMA,qBAAKK,IAAL,GAAY,uBAAS;AACjBzB,4BAAQA,MADS;AAEjB0B,yBAAK,kBAFY;AAGjBC,8BAAU,oBAAW;AACjBhC,6BAAKC,KAAL,CAAWO,QAAX,CAAoBS,GAApB,CAAwBjB,KAAK8B,IAAL,CAAUG,IAAV,CAAeC,MAAf,EAAxB;AACAlC,6BAAKC,KAAL,CAAWkC,OAAX,CAAmB,QAAnB;AACH;AANgB,iBAAT,CAAZ;AAQA,qBAAKlC,KAAL,CAAWO,QAAX,CAAoBS,GAApB,CAAwB,KAAKa,IAAL,CAAUG,IAAV,CAAeC,MAAf,EAAxB;AACA,qBAAKhB,GAAL,CAASkB,MAAT,CAAgB,KAAKN,IAAL,CAAUZ,GAA1B;AACH;AACJ;AA1C+B,KAArB,C","file":"../../../../../scripts/mvc/visualization/chart/views/settings.js","sourcesContent":["/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Form from \"mvc/form/form-view\";\nimport FormData from \"mvc/form/form-data\";\n\nexport default Backbone.View.extend({\n    initialize: function(app, options) {\n        var self = this;\n        this.chart = app.chart;\n        this.setElement(\"<div/>\");\n        this.listenTo(this.chart, \"load\", function() {\n            self.render();\n        });\n    },\n    render: function() {\n        var self = this;\n        var inputs = Utils.clone(this.chart.plugin.settings) || [];\n        var panel_option = this.chart.plugin.specs.use_panels;\n        if (panel_option == \"optional\") {\n            inputs.push({\n                name: \"__use_panels\",\n                type: \"boolean\",\n                label: \"Use multi-panels\",\n                help: \"Would you like to separate your data into individual panels?\"\n            });\n        } else {\n            this.chart.settings.set(\"__use_panels\", panel_option == \"yes\" ? \"true\" : \"false\");\n        }\n        this.$el.empty().addClass(\"ui-margin-bottom\");\n        if (_.size(inputs) > 0) {\n            FormData.visitInputs(inputs, function(input, name) {\n                var model_value = self.chart.settings.get(name);\n                if (model_value !== undefined && !input.hidden) {\n                    input.value = model_value;\n                }\n            });\n            this.form = new Form({\n                inputs: inputs,\n                cls: \"ui-portlet-plain\",\n                onchange: function() {\n                    self.chart.settings.set(self.form.data.create());\n                    self.chart.trigger(\"redraw\");\n                }\n            });\n            this.chart.settings.set(this.form.data.create());\n            this.$el.append(this.form.$el);\n        }\n    }\n});\n"]}