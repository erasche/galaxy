{"version":3,"sources":["mvc/visualization/chart/utilities/series.js"],"names":["_","d3","getDomains","groups","keys","_apply","operator","key","value","group_index","value_sub","values","d","undefined","Math","result","index","min","max","makeSeries","plot_data","group","data","value_index","point","key_index","column_index","push","makeCategories","column_keys","array","data_columns","__data_columns","each","is_label","value_dict","String","mapCategories","i","parseInt","makeUniqueCategories","with_index","categories","counter","column_def","j","makeTickFormat","options","type","precision","formatter","d3format","prefix","formatPrefix","scale","toFixed","symbol","format","label","isNaN","err","addZoom","scaleExtent","yAxis","xAxis","xDomain","domain","yDomain","redraw","svg","xScale","yScale","x_boundary","slice","y_boundary","d3zoom","behavior","zoom","nice","fixDomain","boundary","zoomed","unzoomed","translate","x","y","on","call"],"mappings":";;;;;;;QAAYA,C;;QACAC,E;;;;;;;;;;;;;;;;;;;AAEZ;AACA;AACA;;AAEA;AACA,aAASC,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC9B,iBAASC,MAAT,CAAgBC,QAAhB,EAA0BC,GAA1B,EAA+B;AAC3B,gBAAIC,cAAJ;AACA,iBAAK,IAAIC,WAAT,IAAwBN,MAAxB,EAAgC;AAC5B,oBAAIO,YAAYT,GAAGK,QAAH,EAAaH,OAAOM,WAAP,EAAoBE,MAAjC,EAAyC,UAASC,CAAT,EAAY;AACjE,2BAAOA,EAAEL,GAAF,CAAP;AACH,iBAFe,CAAhB;AAGAC,wBAAQA,UAAUK,SAAV,GAAsBH,SAAtB,GAAkCI,KAAKR,QAAL,EAAeE,KAAf,EAAsBE,SAAtB,CAA1C;AACH;AACD,mBAAOF,KAAP;AACH;AACD,YAAIO,SAAS,EAAb;AACA,aAAK,IAAIC,KAAT,IAAkBZ,IAAlB,EAAwB;AACpB,gBAAIG,MAAMH,KAAKY,KAAL,CAAV;AACAD,mBAAOR,GAAP,IAAc;AACVU,qBAAKZ,OAAO,KAAP,EAAcE,GAAd,CADK;AAEVW,qBAAKb,OAAO,KAAP,EAAcE,GAAd;AAFK,aAAd;AAIH;AACD,eAAOQ,MAAP;AACH;;AAED;AACA,aAASI,UAAT,CAAoBhB,MAApB,EAA4BC,IAA5B,EAAkC;AAC9B,YAAIgB,YAAY,EAAhB;AACA,aAAK,IAAIX,WAAT,IAAwBN,MAAxB,EAAgC;AAC5B,gBAAIkB,QAAQlB,OAAOM,WAAP,CAAZ;AACA,gBAAIa,OAAO,EAAX;AACA,iBAAK,IAAIC,WAAT,IAAwBF,MAAMV,MAA9B,EAAsC;AAClC,oBAAIa,QAAQ,EAAZ;AACA,oBAAIpB,IAAJ,EAAU;AACN,yBAAK,IAAIqB,SAAT,IAAsBrB,IAAtB,EAA4B;AACxB,4BAAIsB,eAAetB,KAAKqB,SAAL,CAAnB;AACAD,8BAAMG,IAAN,CAAWN,MAAMV,MAAN,CAAaY,WAAb,EAA0BG,YAA1B,CAAX;AACH;AACJ,iBALD,MAKO;AACH,yBAAK,IAAIA,aAAT,IAAyBL,MAAMV,MAAN,CAAaY,WAAb,CAAzB,EAAoD;AAChDC,8BAAMG,IAAN,CAAWN,MAAMV,MAAN,CAAaY,WAAb,EAA0BG,aAA1B,CAAX;AACH;AACJ;AACDJ,qBAAKK,IAAL,CAAUH,KAAV;AACH;AACDJ,sBAAUO,IAAV,CAAeL,IAAf;AACH;AACD,eAAOF,SAAP;AACH;;AAED;AACA,aAASQ,cAAT,CAAwBzB,MAAxB,EAAgC0B,WAAhC,EAA6C;AACzC,YAAIC,QAAQ,EAAZ;AACA,YAAIC,eAAe5B,OAAO,CAAP,EAAU6B,cAA7B;AACAhC,UAAEiC,IAAF,CAAOJ,WAAP,EAAoB,UAAStB,GAAT,EAAc;AAC9B,gBAAIwB,aAAaxB,GAAb,EAAkB2B,QAAtB,EAAgC;AAC5BJ,sBAAMvB,GAAN,IAAa,EAAb;AACH;AACJ,SAJD;AAKA,YAAIJ,UAAUA,OAAO,CAAP,CAAd,EAAyB;AACrBH,cAAEiC,IAAF,CAAO9B,OAAO,CAAP,EAAUQ,MAAjB,EAAyB,UAASwB,UAAT,EAAqB;AAC1C,qBAAK,IAAI5B,GAAT,IAAgBuB,KAAhB,EAAuB;AACnBA,0BAAMvB,GAAN,EAAWoB,IAAX,CAAgBS,OAAOD,WAAW5B,GAAX,CAAP,CAAhB;AACH;AACJ,aAJD;AAKH;AACD8B,sBAAcP,KAAd,EAAqB3B,MAArB;AACA,eAAO,EAAE2B,OAAOA,KAAT,EAAP;AACH;;AAED;AACA,aAASO,aAAT,CAAuBP,KAAvB,EAA8B3B,MAA9B,EAAsC;AAClCH,UAAEiC,IAAF,CAAO9B,MAAP,EAAe,UAASkB,KAAT,EAAgB;AAC3BrB,cAAEiC,IAAF,CAAOZ,MAAMV,MAAb,EAAqB,UAASwB,UAAT,EAAqBG,CAArB,EAAwB;AACzC,qBAAK,IAAI/B,GAAT,IAAgBuB,KAAhB,EAAuB;AACnBK,+BAAW5B,GAAX,IAAkBgC,SAASD,CAAT,CAAlB;AACH;AACJ,aAJD;AAKH,SAND;AAOH;;AAED;AACA,aAASE,oBAAT,CAA8BrC,MAA9B,EAAsCsC,UAAtC,EAAkD;AAC9C,YAAIC,aAAa,EAAjB;AACA,YAAIZ,QAAQ,EAAZ;AACA,YAAIa,UAAU,EAAd;AACA,YAAIZ,eAAe5B,OAAO,CAAP,EAAU6B,cAA7B;AACAhC,UAAEiC,IAAF,CAAOF,YAAP,EAAqB,UAASa,UAAT,EAAqBrC,GAArB,EAA0B;AAC3C,gBAAIqC,WAAWV,QAAf,EAAyB;AACrBQ,2BAAWnC,GAAX,IAAkB,EAAlB;AACAuB,sBAAMvB,GAAN,IAAa,EAAb;AACAoC,wBAAQpC,GAAR,IAAe,CAAf;AACH;AACJ,SAND;AAOA;AACA,aAAK,IAAI+B,CAAT,IAAcnC,MAAd,EAAsB;AAClB,gBAAIkB,QAAQlB,OAAOmC,CAAP,CAAZ;AACA,iBAAK,IAAIO,CAAT,IAAcxB,MAAMV,MAApB,EAA4B;AACxB,oBAAIwB,aAAad,MAAMV,MAAN,CAAakC,CAAb,CAAjB;AACA,qBAAK,IAAItC,GAAT,IAAgBmC,UAAhB,EAA4B;AACxB,wBAAIlC,QAAQ4B,OAAOD,WAAW5B,GAAX,CAAP,CAAZ;AACA,wBAAImC,WAAWnC,GAAX,EAAgBC,KAAhB,MAA2BK,SAA/B,EAA0C;AACtC6B,mCAAWnC,GAAX,EAAgBC,KAAhB,IAAyBmC,QAAQpC,GAAR,CAAzB;AACAuB,8BAAMvB,GAAN,EAAWoB,IAAX,CAAgBc,aAAa,CAACE,QAAQpC,GAAR,CAAD,EAAeC,KAAf,CAAb,GAAqCA,KAArD;AACAmC,gCAAQpC,GAAR;AACH;AACJ;AACJ;AACJ;AACD;AACA,aAAK,IAAI+B,EAAT,IAAcnC,MAAd,EAAsB;AAClB,gBAAIkB,SAAQlB,OAAOmC,EAAP,CAAZ;AACA,iBAAK,IAAIO,EAAT,IAAcxB,OAAMV,MAApB,EAA4B;AACxB,oBAAIwB,cAAad,OAAMV,MAAN,CAAakC,EAAb,CAAjB;AACA,qBAAK,IAAItC,IAAT,IAAgBmC,UAAhB,EAA4B;AACxB,wBAAIlC,SAAQ4B,OAAOD,YAAW5B,IAAX,CAAP,CAAZ;AACA4B,gCAAW5B,IAAX,IAAkBmC,WAAWnC,IAAX,EAAgBC,MAAhB,CAAlB;AACH;AACJ;AACJ;AACD,eAAO;AACHkC,wBAAYA,UADT;AAEHZ,mBAAOA,KAFJ;AAGHa,qBAASA;AAHN,SAAP;AAKH;;AAED;AACA,aAASG,cAAT,CAAwBC,OAAxB,EAAiC;AAC7B,YAAIC,OAAOD,QAAQC,IAAnB;AACA,YAAIC,YAAYF,QAAQE,SAAxB;AACA,YAAIP,aAAaK,QAAQL,UAAzB;AACA,YAAIQ,YAAYH,QAAQG,SAAxB;AACA,YAAIF,QAAQ,MAAZ,EAAoB;AAChBE,sBAAU,YAAW;AACjB,uBAAO,EAAP;AACH,aAFD;AAGH,SAJD,MAIO,IAAIF,QAAQ,MAAZ,EAAoB;AACvB,gBAAIN,UAAJ,EAAgB;AACZQ,0BAAU,UAAS1C,KAAT,EAAgB;AACtB,2BAAOkC,WAAWlC,KAAX,KAAqB,EAA5B;AACH,iBAFD;AAGH;AACJ,SANM,MAMA;AACH,gBAAI2C,WAAW,SAAXA,QAAW,CAASvC,CAAT,EAAY;AACvB,wBAAQoC,IAAR;AACI,yBAAK,GAAL;AACI,4BAAII,SAASnD,GAAGoD,YAAH,CAAgBzC,CAAhB,CAAb;AACA,+BAAOwC,OAAOE,KAAP,CAAa1C,CAAb,EAAgB2C,OAAhB,KAA4BH,OAAOI,MAA1C;AACJ;AACI,+BAAOvD,GAAGwD,MAAH,CAAU,MAAMR,SAAN,GAAkBD,IAA5B,EAAkCpC,CAAlC,CAAP;AALR;AAOH,aARD;AASA,gBAAI8B,UAAJ,EAAgB;AACZQ,0BAAU,UAAS1C,KAAT,EAAgB;AACtB,wBAAIkD,QAAQhB,WAAWlC,KAAX,CAAZ;AACA,wBAAIkD,KAAJ,EAAW;AACP,4BAAIC,MAAMD,KAAN,CAAJ,EAAkB;AACd,mCAAOA,KAAP;AACH,yBAFD,MAEO;AACH,gCAAI;AACA,uCAAOP,SAASO,KAAT,CAAP;AACH,6BAFD,CAEE,OAAOE,GAAP,EAAY;AACV,uCAAOF,KAAP;AACH;AACJ;AACJ,qBAVD,MAUO;AACH,+BAAO,EAAP;AACH;AACJ,iBAfD;AAgBH,aAjBD,MAiBO;AACHR,0BAAU,UAAS1C,KAAT,EAAgB;AACtB,2BAAO2C,SAAS3C,KAAT,CAAP;AACH,iBAFD;AAGH;AACJ;AACJ;;AAED;AACA,aAASqD,OAAT,CAAiBd,OAAjB,EAA0B;AACtB,YAAIe,cAAc,GAAlB;AACA,YAAIC,QAAQhB,QAAQgB,KAApB;AACA,YAAIC,QAAQjB,QAAQiB,KAApB;AACA,YAAIC,UAAUlB,QAAQkB,OAAR,IAAmBD,MAAMV,KAAN,GAAcY,MAA/C;AACA,YAAIC,UAAUpB,QAAQoB,OAAR,IAAmBJ,MAAMT,KAAN,GAAcY,MAA/C;AACA,YAAIE,SAASrB,QAAQqB,MAArB;AACA,YAAIC,MAAMtB,QAAQsB,GAAlB;AACA,YAAIC,SAASN,MAAMV,KAAN,EAAb;AACA,YAAIiB,SAASR,MAAMT,KAAN,EAAb;AACA,YAAIkB,aAAaF,OAAOJ,MAAP,GAAgBO,KAAhB,EAAjB;AACA,YAAIC,aAAaH,OAAOL,MAAP,GAAgBO,KAAhB,EAAjB;AACA,YAAIE,SAAS1E,GAAG2E,QAAH,CAAYC,IAAZ,EAAb;AACAP,eAAOQ,IAAP;AACAP,eAAOO,IAAP;AACA,iBAASC,SAAT,CAAmBb,MAAnB,EAA2Bc,QAA3B,EAAqC;AACjCd,mBAAO,CAAP,IAAYpD,KAAKG,GAAL,CAASH,KAAKI,GAAL,CAASgD,OAAO,CAAP,CAAT,EAAoBc,SAAS,CAAT,CAApB,CAAT,EAA2CA,SAAS,CAAT,IAAcA,SAAS,CAAT,IAAclB,WAAvE,CAAZ;AACAI,mBAAO,CAAP,IAAYpD,KAAKI,GAAL,CAAS8D,SAAS,CAAT,IAAcA,SAAS,CAAT,IAAclB,WAArC,EAAkDhD,KAAKG,GAAL,CAASiD,OAAO,CAAP,CAAT,EAAoBc,SAAS,CAAT,CAApB,CAAlD,CAAZ;AACA,mBAAOd,MAAP;AACH;AACD,iBAASe,MAAT,GAAkB;AACdd,oBAAQY,UAAUR,OAAOL,MAAP,EAAV,EAA2BQ,UAA3B,CAAR;AACAT,oBAAQc,UAAUT,OAAOJ,MAAP,EAAV,EAA2BM,UAA3B,CAAR;AACAJ;AACH;AACD,iBAASc,QAAT,GAAoB;AAChBjB,oBAAQO,UAAR;AACAL,oBAAQO,UAAR;AACAN;AACAO,mBAAOrB,KAAP,CAAa,CAAb;AACAqB,mBAAOQ,SAAP,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACH;AACDR,eACKS,CADL,CACOd,MADP,EAEKe,CAFL,CAEOd,MAFP,EAGKT,WAHL,CAGiB,CAAC,CAAD,EAAIA,WAAJ,CAHjB,EAIKwB,EAJL,CAIQ,MAJR,EAIgBL,MAJhB;AAKAZ,YAAIkB,IAAJ,CAASZ,MAAT,EAAiBW,EAAjB,CAAoB,eAApB,EAAqCJ,QAArC;AACA,eAAOP,MAAP;AACH;;sBAEc;AACX/C,wBAAgBA,cADL;AAEXY,8BAAsBA,oBAFX;AAGXrB,oBAAYA,UAHD;AAIXjB,oBAAYA,UAJD;AAKXmC,uBAAeA,aALJ;AAMXS,wBAAgBA,cANL;AAOXe,iBAASA;AAPE,K","file":"../../../../../scripts/mvc/visualization/chart/utilities/series.js","sourcesContent":["import * as _ from \"underscore\";\nimport * as d3 from \"d3\";\n\n// TODO: This d3 must(?) just be global because various charts use different\n// versions, and we want to use whichever one that is.  I think.  I hope.\n/* global d3 */\n\n/** Get domain boundaries value */\nfunction getDomains(groups, keys) {\n    function _apply(operator, key) {\n        let value;\n        for (let group_index in groups) {\n            let value_sub = d3[operator](groups[group_index].values, function(d) {\n                return d[key];\n            });\n            value = value === undefined ? value_sub : Math[operator](value, value_sub);\n        }\n        return value;\n    }\n    var result = {};\n    for (var index in keys) {\n        var key = keys[index];\n        result[key] = {\n            min: _apply(\"min\", key),\n            max: _apply(\"max\", key)\n        };\n    }\n    return result;\n}\n\n/** Default series maker */\nfunction makeSeries(groups, keys) {\n    var plot_data = [];\n    for (var group_index in groups) {\n        var group = groups[group_index];\n        var data = [];\n        for (var value_index in group.values) {\n            var point = [];\n            if (keys) {\n                for (var key_index in keys) {\n                    let column_index = keys[key_index];\n                    point.push(group.values[value_index][column_index]);\n                }\n            } else {\n                for (let column_index in group.values[value_index]) {\n                    point.push(group.values[value_index][column_index]);\n                }\n            }\n            data.push(point);\n        }\n        plot_data.push(data);\n    }\n    return plot_data;\n}\n\n/** Default category maker */\nfunction makeCategories(groups, column_keys) {\n    var array = {};\n    var data_columns = groups[0].__data_columns;\n    _.each(column_keys, function(key) {\n        if (data_columns[key].is_label) {\n            array[key] = [];\n        }\n    });\n    if (groups && groups[0]) {\n        _.each(groups[0].values, function(value_dict) {\n            for (var key in array) {\n                array[key].push(String(value_dict[key]));\n            }\n        });\n    }\n    mapCategories(array, groups);\n    return { array: array };\n}\n\n/** Apply default mapping index all values contained in label columns (for all groups) */\nfunction mapCategories(array, groups) {\n    _.each(groups, function(group) {\n        _.each(group.values, function(value_dict, i) {\n            for (var key in array) {\n                value_dict[key] = parseInt(i);\n            }\n        });\n    });\n}\n\n/** Category make for unique category labels */\nfunction makeUniqueCategories(groups, with_index) {\n    var categories = {};\n    var array = {};\n    var counter = {};\n    var data_columns = groups[0].__data_columns;\n    _.each(data_columns, function(column_def, key) {\n        if (column_def.is_label) {\n            categories[key] = {};\n            array[key] = [];\n            counter[key] = 0;\n        }\n    });\n    // index all values contained in label columns (for all groups)\n    for (var i in groups) {\n        var group = groups[i];\n        for (var j in group.values) {\n            var value_dict = group.values[j];\n            for (var key in categories) {\n                var value = String(value_dict[key]);\n                if (categories[key][value] === undefined) {\n                    categories[key][value] = counter[key];\n                    array[key].push(with_index ? [counter[key], value] : value);\n                    counter[key]++;\n                }\n            }\n        }\n    }\n    // convert group values into category indeces\n    for (let i in groups) {\n        let group = groups[i];\n        for (let j in group.values) {\n            let value_dict = group.values[j];\n            for (let key in categories) {\n                let value = String(value_dict[key]);\n                value_dict[key] = categories[key][value];\n            }\n        }\n    }\n    return {\n        categories: categories,\n        array: array,\n        counter: counter\n    };\n}\n\n/** Make axis */\nfunction makeTickFormat(options) {\n    var type = options.type;\n    var precision = options.precision;\n    var categories = options.categories;\n    var formatter = options.formatter;\n    if (type == \"hide\") {\n        formatter(function() {\n            return \"\";\n        });\n    } else if (type == \"auto\") {\n        if (categories) {\n            formatter(function(value) {\n                return categories[value] || \"\";\n            });\n        }\n    } else {\n        var d3format = function(d) {\n            switch (type) {\n                case \"s\":\n                    var prefix = d3.formatPrefix(d);\n                    return prefix.scale(d).toFixed() + prefix.symbol;\n                default:\n                    return d3.format(\".\" + precision + type)(d);\n            }\n        };\n        if (categories) {\n            formatter(function(value) {\n                var label = categories[value];\n                if (label) {\n                    if (isNaN(label)) {\n                        return label;\n                    } else {\n                        try {\n                            return d3format(label);\n                        } catch (err) {\n                            return label;\n                        }\n                    }\n                } else {\n                    return \"\";\n                }\n            });\n        } else {\n            formatter(function(value) {\n                return d3format(value);\n            });\n        }\n    }\n}\n\n/** Add zoom handler */\nfunction addZoom(options) {\n    var scaleExtent = 100;\n    var yAxis = options.yAxis;\n    var xAxis = options.xAxis;\n    var xDomain = options.xDomain || xAxis.scale().domain;\n    var yDomain = options.yDomain || yAxis.scale().domain;\n    var redraw = options.redraw;\n    var svg = options.svg;\n    var xScale = xAxis.scale();\n    var yScale = yAxis.scale();\n    var x_boundary = xScale.domain().slice();\n    var y_boundary = yScale.domain().slice();\n    var d3zoom = d3.behavior.zoom();\n    xScale.nice();\n    yScale.nice();\n    function fixDomain(domain, boundary) {\n        domain[0] = Math.min(Math.max(domain[0], boundary[0]), boundary[1] - boundary[1] / scaleExtent);\n        domain[1] = Math.max(boundary[0] + boundary[1] / scaleExtent, Math.min(domain[1], boundary[1]));\n        return domain;\n    }\n    function zoomed() {\n        yDomain(fixDomain(yScale.domain(), y_boundary));\n        xDomain(fixDomain(xScale.domain(), x_boundary));\n        redraw();\n    }\n    function unzoomed() {\n        xDomain(x_boundary);\n        yDomain(y_boundary);\n        redraw();\n        d3zoom.scale(1);\n        d3zoom.translate([0, 0]);\n    }\n    d3zoom\n        .x(xScale)\n        .y(yScale)\n        .scaleExtent([1, scaleExtent])\n        .on(\"zoom\", zoomed);\n    svg.call(d3zoom).on(\"dblclick.zoom\", unzoomed);\n    return d3zoom;\n}\n\nexport default {\n    makeCategories: makeCategories,\n    makeUniqueCategories: makeUniqueCategories,\n    makeSeries: makeSeries,\n    getDomains: getDomains,\n    mapCategories: mapCategories,\n    makeTickFormat: makeTickFormat,\n    addZoom: addZoom\n};\n"]}