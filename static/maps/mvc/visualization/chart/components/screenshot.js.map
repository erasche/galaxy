{"version":3,"sources":["mvc/visualization/chart/components/screenshot.js"],"names":["createPNG","options","$el","find","length","_svg2png","_canvas2png","$canvas","width","height","_toImage","x_offset","y_offset","tagname","prop","toLowerCase","p","position","left","parseInt","css","top","w","newCanvas","children","each","$","newContext","drawImage","document","createElement","outerWidth","outerHeight","getContext","save","fillStyle","fillRect","restore","translate","textAlign","textBaseline","imgData","toDataURL","window","location","href","replace","err","console","debug","error","scale","xml","toXML","canvas","context","source","Image","$container","append","src","btoa","string","onload","remove","createSVG","createPDF","data","filename","type","svg","form","id","method","action","display","empty","name","input","value","submit","log","$svg","nsvgs","first","serializer","XMLSerializer","$composite","attr","version","xmlns","xmlString","offsetX","clone","_inline","$g","serializeToString","$target","sheet_id","styleSheets","sheet","rules","cssRules","idx","len","selectorText","i","elem","style","cssText"],"mappings":"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","file":"../../../../../scripts/mvc/visualization/chart/components/screenshot.js","sourcesContent":["/** This class enables users to export/download a chart as PNG, SVG or PDF. */\n/** PNG export */\nfunction createPNG(options) {\n    if (options.$el.find(\"svg\").length > 0) {\n        _svg2png(options);\n    } else {\n        _canvas2png(options.$el.find(\".charts-viewer-canvas\"));\n    }\n}\n\n/** Convert canvas to png */\nfunction _canvas2png($canvas) {\n    try {\n        if ($canvas.width() !== 0 && $canvas.height() !== 0) {\n            var newCanvas = document.createElement(\"canvas\");\n            newCanvas.width = $canvas.outerWidth(true);\n            newCanvas.height = $canvas.outerHeight(true);\n            var newContext = newCanvas.getContext(\"2d\");\n            newContext.save();\n            newContext.fillStyle = \"rgb(255,255,255)\";\n            newContext.fillRect(0, 0, newCanvas.width, newCanvas.height);\n            newContext.restore();\n            newContext.translate(0, 0);\n            newContext.textAlign = \"left\";\n            newContext.textBaseline = \"top\";\n            function _toImage($el, x_offset, y_offset) {\n                var tagname = $el.prop(\"tagName\").toLowerCase();\n                var p = $el.position();\n                var left =\n                    x_offset +\n                    p.left +\n                    parseInt($el.css(\"marginLeft\"), 10) +\n                    parseInt($el.css(\"borderLeftWidth\"), 10) +\n                    parseInt($el.css(\"paddingLeft\"), 10);\n                var top =\n                    y_offset +\n                    p.top +\n                    parseInt($el.css(\"marginTop\"), 10) +\n                    parseInt($el.css(\"borderTopWidth\"), 10) +\n                    parseInt($el.css(\"paddingTop\"), 10);\n                var w = newCanvas.width;\n                if (tagname == \"div\" || tagname == \"span\") {\n                    $el.children().each(function() {\n                        _toImage($(this), left, top);\n                    });\n                } else if (tagname == \"canvas\") {\n                    newContext.drawImage($el[0], left, top);\n                }\n            }\n            $canvas.children().each(function() {\n                _toImage($(this), 0, 0);\n            });\n            var imgData = newCanvas.toDataURL(\"image/png\");\n            if (imgData) {\n                window.location.href = imgData.replace(\"image/png\", \"image/octet-stream\");\n            }\n        }\n    } catch (err) {\n        console.debug(\"FAILED - screenshot::_canvas2png() - \" + err);\n        if (options.error) {\n            options.error(\"Please reduce your visualization to a single panel and try again.\");\n        }\n    }\n}\n\n/** Convert svg to png */\nfunction _svg2png(options) {\n    var scale = 5;\n    var xml = toXML(options);\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n    var source = new Image();\n    var $container = $('<div style=\"display:none;\"/>').append($(canvas));\n    $(\"body\").append($container);\n    canvas.width = xml.width * scale;\n    canvas.height = xml.height * scale;\n    source.src = \"data:image/svg+xml;base64,\" + btoa(xml.string);\n    source.onload = function() {\n        context.drawImage(source, 0, 0, canvas.width, canvas.height);\n        window.location.href = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        $container.remove();\n    };\n}\n\n/** SVG export */\nfunction createSVG(options) {\n    window.location.href = \"data:none/none;base64,\" + btoa(toXML(options).string);\n}\n\n/** PDF export */\nfunction createPDF(options) {\n    var xml = toXML(options);\n    var data = {\n        filename: \"visualization\",\n        type: \"application/pdf\",\n        height: xml.height,\n        width: xml.width,\n        scale: 2,\n        svg: xml.string\n    };\n    var $el = $(\"body\");\n    var form = $el.find(\"#viewer-form\");\n    if (form.length === 0) {\n        form = $(\"<form>\", {\n            id: \"viewer-form\",\n            method: \"post\",\n            action: \"http://export.highcharts.com/\",\n            display: \"none\"\n        });\n        $el.append(form);\n    }\n    form.empty();\n    for (var name in data) {\n        var input = $(\"<input/>\", {\n            type: \"hidden\",\n            name: name,\n            value: data[name]\n        });\n        form.append(input);\n    }\n    try {\n        form.submit();\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n/** XML export */\nfunction toXML(options) {\n    var $svg = options.$el.find(\"svg\");\n    if ($svg.length == 0) {\n        if (options.error) {\n            options.error(\"No SVG found. This visualization type does not support SVG/PDF export.\");\n            return;\n        }\n    }\n    var $el = options.$el;\n    var nsvgs = $svg.length;\n    var height = parseInt($svg.first().css(\"height\"));\n    var width = parseInt($svg.first().css(\"width\"));\n    var serializer = new XMLSerializer();\n    var $composite = $(\"<svg/>\").attr({\n        version: \"1.1\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: width * nsvgs,\n        height: height\n    });\n    var xmlString = \"\";\n    var offsetX = 0;\n    $svg.each(function() {\n        var $svg = $(this).clone();\n        _inline($svg);\n        var $g = $('<g transform=\"translate(' + offsetX + ', 0)\">').attr(\"xmlns\", \"http://www.w3.org/2000/svg\");\n        $g.append($svg.find(\"g\").first());\n        $composite.append($g);\n        offsetX += width;\n    });\n    return {\n        string: serializer.serializeToString($composite[0]),\n        height: height,\n        width: width\n    };\n}\n\n/** inlines CSS code */\nfunction _inline($target) {\n    for (var sheet_id in document.styleSheets) {\n        var sheet = document.styleSheets[sheet_id];\n        var rules = sheet.cssRules;\n        if (rules) {\n            for (var idx = 0, len = rules.length; idx < len; idx++) {\n                try {\n                    $target.find(rules[idx].selectorText).each(function(i, elem) {\n                        elem.style.cssText += rules[idx].style.cssText;\n                    });\n                } catch (err) {}\n            }\n        }\n    }\n}\n\nexport default {\n    createPNG: createPNG,\n    createSVG: createSVG,\n    createPDF: createPDF\n};\n"]}