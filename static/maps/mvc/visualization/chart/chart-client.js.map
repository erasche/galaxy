{"version":3,"sources":["mvc/visualization/chart/chart-client.js"],"names":["Backbone","View","extend","initialize","options","modal","window","parent","Galaxy","setElement","$","addClass","append","$center","$right","$buttons","chart","plugin","visualization_plugin","specs","chart_load","message","Message","deferred","viewer","editor","menu","$el","ajax","url","root","dataset_id","done","dataset","load","trigger","fail","response","responseJSON","err_msg","errormessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;QAOYA,Q;;;;;;;;;;;;;;;;;;;;;;;;;sBAKGA,SAASC,IAAT,CAAcC,MAAd,CAAqB;AAChCC,oBAAY,oBAASC,OAAT,EAAkB;AAAA;;AAC1B,iBAAKC,KAAL,GAAcC,OAAOC,MAAP,CAAcC,MAAd,IAAwBF,OAAOC,MAAP,CAAcC,MAAd,CAAqBH,KAA9C,IAAwD,IAAI,kBAAMJ,IAAV,EAArE;AACA,iBAAKQ,UAAL,CACIC,EAAE,QAAF,EACKC,QADL,CACc,eADd,EAEKC,MAFL,CAEYF,EAAE,QAAF,EAAYC,QAAZ,CAAqB,gBAArB,CAFZ,EAGKC,MAHL,CAGYF,EAAE,QAAF,EAAYC,QAAZ,CAAqB,eAArB,CAHZ,EAIKC,MAJL,CAIYF,EAAE,QAAF,EAAYC,QAAZ,CAAqB,cAArB,CAJZ,CADJ;AAOA,iBAAKE,OAAL,GAAe,KAAKH,CAAL,CAAO,gBAAP,CAAf;AACA,iBAAKI,MAAL,GAAc,KAAKJ,CAAL,CAAO,eAAP,CAAd;AACA,iBAAKK,QAAL,GAAgB,KAAKL,CAAL,CAAO,iBAAP,CAAhB;AACA,iBAAKM,KAAL,GAAa,oBAAU,EAAV,EAAcZ,OAAd,CAAb;AACA,iBAAKY,KAAL,CAAWC,MAAX,GAAoBb,QAAQc,oBAA5B;AACA,iBAAKF,KAAL,CAAWC,MAAX,CAAkBE,KAAlB,GAA0B,KAAKH,KAAL,CAAWC,MAAX,CAAkBE,KAAlB,IAA2B,EAArD;AACA,iBAAKC,UAAL,GAAkBhB,QAAQgB,UAA1B;AACA,iBAAKC,OAAL,GAAe,IAAI,iBAAGC,OAAP,EAAf;AACA,iBAAKC,QAAL,GAAgB,wBAAhB;AACA,iBAAKC,MAAL,GAAc,qBAAW,IAAX,CAAd;AACA,iBAAKC,MAAL,GAAc,qBAAW,IAAX,CAAd;AACA,iBAAKC,IAAL,GAAY,mBAAS,IAAT,CAAZ;AACA,iBAAKb,OAAL,CAAaD,MAAb,CAAoB,KAAKY,MAAL,CAAYG,GAAhC;AACA,iBAAKb,MAAL,CAAYF,MAAZ,CAAmB,KAAKS,OAAL,CAAaM,GAAhC,EAAqCf,MAArC,CAA4C,KAAKa,MAAL,CAAYE,GAAxD;AACA,iBAAKZ,QAAL,CAAcH,MAAd,CAAqB,KAAKc,IAAL,CAAUC,GAA/B;AACAjB,cAAEkB,IAAF,CAAO;AACHC,qBAAQrB,OAAOsB,IAAf,qBAAmC1B,QAAQ2B;AADxC,aAAP,EAGKC,IAHL,CAGU,mBAAW;AACb,sBAAKC,OAAL,GAAeA,OAAf;AACA,sBAAKjB,KAAL,CAAWkB,IAAX;AACA,sBAAKlB,KAAL,CAAWmB,OAAX,CAAmB,QAAnB;AACH,aAPL,EAQKC,IARL,CAQU,oBAAY;AACd,oBAAIf,UAAUgB,SAASC,YAAT,IAAyBD,SAASC,YAAT,CAAsBC,OAA7D;AACA,sBAAKC,YAAL,GAAoBnB,WAAW,kCAA/B;AACH,aAXL;AAYH;AArC+B,KAArB,C","file":"../../../../scripts/mvc/visualization/chart/chart-client.js","sourcesContent":["import Deferred from \"utils/deferred\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Chart from \"mvc/visualization/chart/components/model\";\nimport Editor from \"mvc/visualization/chart/views/editor\";\nimport Viewer from \"mvc/visualization/chart/views/viewer\";\nimport Menu from \"mvc/visualization/chart/views/menu\";\nimport * as Backbone from \"backbone\";\n\n/* global $ */\n/* global Galaxy */\n\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        this.modal = (window.parent.Galaxy && window.parent.Galaxy.modal) || new Modal.View();\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"charts-client\")\n                .append($(\"<div/>\").addClass(\"charts-buttons\"))\n                .append($(\"<div/>\").addClass(\"charts-center\"))\n                .append($(\"<div/>\").addClass(\"charts-right\"))\n        );\n        this.$center = this.$(\".charts-center\");\n        this.$right = this.$(\".charts-right\");\n        this.$buttons = this.$(\".charts-buttons\");\n        this.chart = new Chart({}, options);\n        this.chart.plugin = options.visualization_plugin;\n        this.chart.plugin.specs = this.chart.plugin.specs || {};\n        this.chart_load = options.chart_load;\n        this.message = new Ui.Message();\n        this.deferred = new Deferred();\n        this.viewer = new Viewer(this);\n        this.editor = new Editor(this);\n        this.menu = new Menu(this);\n        this.$center.append(this.viewer.$el);\n        this.$right.append(this.message.$el).append(this.editor.$el);\n        this.$buttons.append(this.menu.$el);\n        $.ajax({\n            url: `${Galaxy.root}api/datasets/${options.dataset_id}`\n        })\n            .done(dataset => {\n                this.dataset = dataset;\n                this.chart.load();\n                this.chart.trigger(\"redraw\");\n            })\n            .fail(response => {\n                let message = response.responseJSON && response.responseJSON.err_msg;\n                this.errormessage = message || \"Import failed for unkown reason.\";\n            });\n    }\n});\n"]}